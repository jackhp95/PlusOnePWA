var _user$project$TextArea$textareaStyles = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'resize', _1: 'none'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'max-height', _1: '40vh'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$TextArea$textareaRows = function (x) {
	var calc = _elm_lang$core$Basics$round(
		_elm_lang$core$Basics$toFloat(x - 32) / 18.4);
	var rowsNum = (_elm_lang$core$Native_Utils.cmp(calc, 2) < 0) ? 1 : (calc - 1);
	return _elm_lang$html$Html_Attributes$rows(rowsNum);
};
var _user$project$TextArea$scrollHeightDecoder = A2(
	_elm_lang$core$Json_Decode$map,
	_user$project$Types$TextAreaResizer,
	A2(
		_elm_lang$core$Json_Decode$at,
		{
			ctor: '::',
			_0: 'target',
			_1: {
				ctor: '::',
				_0: 'scrollHeight',
				_1: {ctor: '[]'}
			}
		},
		_elm_lang$core$Json_Decode$int));
var _user$project$TextArea$auto = function (client) {
	var height = client.textAreaHeight;
	return {
		ctor: '::',
		_0: A2(_elm_lang$html$Html_Events$on, 'input', _user$project$TextArea$scrollHeightDecoder),
		_1: {
			ctor: '::',
			_0: _user$project$TextArea$textareaStyles,
			_1: {
				ctor: '::',
				_0: _user$project$TextArea$textareaRows(height),
				_1: {ctor: '[]'}
			}
		}
	};
};
