var _user$project$SeatGeek_Query$composeArgument = F2(
	function (name, value) {
		var _p0 = value;
		if (_p0 === '') {
			return '';
		} else {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'&',
				A2(
					_elm_lang$core$Basics_ops['++'],
					name,
					A2(_elm_lang$core$Basics_ops['++'], '=', value)));
		}
	});
var _user$project$SeatGeek_Query$composeRequest = function (query) {
	var start = A2(
		_elm_lang$core$Basics_ops['++'],
		A2(
			_elm_lang$core$Basics_ops['++'],
			'?',
			A2(_elm_lang$core$Basics_ops['++'], 'client_id=', query.client_id)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'&postal_code=65203&per_page=30',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(_user$project$SeatGeek_Query$composeArgument, 'aid', query.aid),
				A2(_user$project$SeatGeek_Query$composeArgument, 'rid', query.rid))));
	var url = 'https://api.seatgeek.com/2/';
	var _p1 = query.endpoint;
	switch (_p1.ctor) {
		case 'Events':
			if (_p1._0.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(_elm_lang$core$Basics_ops['++'], 'events', start));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'events/',
						A2(_elm_lang$core$Basics_ops['++'], _p1._0._0, start)));
			}
		case 'Performers':
			if (_p1._0.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(_elm_lang$core$Basics_ops['++'], 'performers', start));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'performers/',
						A2(_elm_lang$core$Basics_ops['++'], _p1._0._0, start)));
			}
		case 'Venues':
			if (_p1._0.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(_elm_lang$core$Basics_ops['++'], 'venues', start));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'venues/',
						A2(_elm_lang$core$Basics_ops['++'], _p1._0._0, start)));
			}
		case 'Recommendations':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				url,
				A2(_elm_lang$core$Basics_ops['++'], 'recommendations', start));
		case 'Taxonomies':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				url,
				A2(_elm_lang$core$Basics_ops['++'], 'taxonomies', start));
		default:
			return A2(
				_elm_lang$core$Basics_ops['++'],
				url,
				A2(_elm_lang$core$Basics_ops['++'], 'genres', start));
	}
};
var _user$project$SeatGeek_Query$askQuery = function (query) {
	var url = _user$project$SeatGeek_Query$composeRequest(query);
	var request = A2(_elm_lang$http$Http$get, url, _user$project$SeatGeek_Decode$decodeReply);
	return A2(_elm_lang$http$Http$send, _user$project$Types$GetReply, request);
};
