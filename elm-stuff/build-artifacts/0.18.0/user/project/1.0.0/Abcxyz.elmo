var _user$project$Abcxyz$performerStatsView = function (stats) {
	return A2(
		_elm_lang$html$Html$dl,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('ba pa3 ma2'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$dt,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Performer Event Count Stats'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$dd,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(stats.event_count)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Abcxyz$taxonomyView = function (taxonomy) {
	return A2(
		_elm_lang$html$Html$dl,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('ba pa3 ma2'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$dt,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('ID'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$dd,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(taxonomy.id)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$dt,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Parent ID'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$dd,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(taxonomy.parent_id)),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$dt,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Name'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$dd,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(taxonomy.name),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Abcxyz$eventVenueLocationView = function (location) {
	return A2(
		_elm_lang$html$Html$dl,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('ba pa3 ma2'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$dt,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Latitude'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$dd,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(location.lat)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$dt,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Longitude'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$dd,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(location.lon)),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Abcxyz$eventVenueView = function (venue) {
	return A2(
		_elm_lang$html$Html$dl,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('ba pa3 ma2'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$dt,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Venue Name'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$dd,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(venue.name),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$dt,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Display Location'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$dd,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(venue.display_location),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$dt,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Extended Address'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$dd,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(venue.extended_address),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$dt,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Name V2'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$dd,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(venue.name_v2),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$dt,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('State'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$dd,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text(
															A2(_elm_lang$core$Maybe$withDefault, 'no state provided', venue.state)),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$dt,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Slug'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$dd,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(venue.slug),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$dt,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('Timezone'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$dd,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(venue.timezone),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$dt,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text('Site'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$dd,
																			{ctor: '[]'},
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html$text(venue.url),
																				_1: {ctor: '[]'}
																			}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html$dt,
																				{ctor: '[]'},
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html$text('Postal Code'),
																					_1: {ctor: '[]'}
																				}),
																			_1: {
																				ctor: '::',
																				_0: A2(
																					_elm_lang$html$Html$dd,
																					{ctor: '[]'},
																					{
																						ctor: '::',
																						_0: _elm_lang$html$Html$text(venue.postal_code),
																						_1: {ctor: '[]'}
																					}),
																				_1: {
																					ctor: '::',
																					_0: A2(
																						_elm_lang$html$Html$dt,
																						{ctor: '[]'},
																						{
																							ctor: '::',
																							_0: _elm_lang$html$Html$text('City'),
																							_1: {ctor: '[]'}
																						}),
																					_1: {
																						ctor: '::',
																						_0: A2(
																							_elm_lang$html$Html$dd,
																							{ctor: '[]'},
																							{
																								ctor: '::',
																								_0: _elm_lang$html$Html$text(venue.city),
																								_1: {ctor: '[]'}
																							}),
																						_1: {
																							ctor: '::',
																							_0: A2(
																								_elm_lang$html$Html$dt,
																								{ctor: '[]'},
																								{
																									ctor: '::',
																									_0: _elm_lang$html$Html$text('Country'),
																									_1: {ctor: '[]'}
																								}),
																							_1: {
																								ctor: '::',
																								_0: A2(
																									_elm_lang$html$Html$dd,
																									{ctor: '[]'},
																									{
																										ctor: '::',
																										_0: _elm_lang$html$Html$text(venue.country),
																										_1: {ctor: '[]'}
																									}),
																								_1: {
																									ctor: '::',
																									_0: A2(
																										_elm_lang$html$Html$dt,
																										{ctor: '[]'},
																										{
																											ctor: '::',
																											_0: _elm_lang$html$Html$text('Address'),
																											_1: {ctor: '[]'}
																										}),
																									_1: {
																										ctor: '::',
																										_0: A2(
																											_elm_lang$html$Html$dd,
																											{ctor: '[]'},
																											{
																												ctor: '::',
																												_0: _elm_lang$html$Html$text(venue.address),
																												_1: {ctor: '[]'}
																											}),
																										_1: {
																											ctor: '::',
																											_0: _user$project$Abcxyz$eventVenueLocationView(venue.location),
																											_1: {
																												ctor: '::',
																												_0: A2(
																													_elm_lang$html$Html$dt,
																													{ctor: '[]'},
																													{
																														ctor: '::',
																														_0: _elm_lang$html$Html$text('Popularity'),
																														_1: {ctor: '[]'}
																													}),
																												_1: {
																													ctor: '::',
																													_0: A2(
																														_elm_lang$html$Html$dd,
																														{ctor: '[]'},
																														{
																															ctor: '::',
																															_0: _elm_lang$html$Html$text(
																																_elm_lang$core$Basics$toString(venue.popularity)),
																															_1: {ctor: '[]'}
																														}),
																													_1: {
																														ctor: '::',
																														_0: A2(
																															_elm_lang$html$Html$dt,
																															{ctor: '[]'},
																															{
																																ctor: '::',
																																_0: _elm_lang$html$Html$text('Score'),
																																_1: {ctor: '[]'}
																															}),
																														_1: {
																															ctor: '::',
																															_0: A2(
																																_elm_lang$html$Html$dd,
																																{ctor: '[]'},
																																{
																																	ctor: '::',
																																	_0: _elm_lang$html$Html$text(
																																		_elm_lang$core$Basics$toString(venue.score)),
																																	_1: {ctor: '[]'}
																																}),
																															_1: {
																																ctor: '::',
																																_0: A2(
																																	_elm_lang$html$Html$dt,
																																	{ctor: '[]'},
																																	{
																																		ctor: '::',
																																		_0: _elm_lang$html$Html$text('ID'),
																																		_1: {ctor: '[]'}
																																	}),
																																_1: {
																																	ctor: '::',
																																	_0: A2(
																																		_elm_lang$html$Html$dd,
																																		{ctor: '[]'},
																																		{
																																			ctor: '::',
																																			_0: _elm_lang$html$Html$text(
																																				_elm_lang$core$Basics$toString(venue.id)),
																																			_1: {ctor: '[]'}
																																		}),
																																	_1: {
																																		ctor: '::',
																																		_0: A2(
																																			_elm_lang$html$Html$dt,
																																			{ctor: '[]'},
																																			{
																																				ctor: '::',
																																				_0: _elm_lang$html$Html$text('num upcoming events'),
																																				_1: {ctor: '[]'}
																																			}),
																																		_1: {
																																			ctor: '::',
																																			_0: A2(
																																				_elm_lang$html$Html$dd,
																																				{ctor: '[]'},
																																				{
																																					ctor: '::',
																																					_0: _elm_lang$html$Html$text(
																																						_elm_lang$core$Basics$toString(venue.num_upcoming_events)),
																																					_1: {ctor: '[]'}
																																				}),
																																			_1: {ctor: '[]'}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Abcxyz$performerDivisionView = function (division) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('ba pa3 ma2 b--red'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'display_type: ',
							_elm_lang$core$Basics$toString(division.display_type))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'short_name: ',
								_elm_lang$core$Basics$toString(division.short_name))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'display_name: ',
									_elm_lang$core$Basics$toString(division.display_name))),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'division_level: ',
										_elm_lang$core$Basics$toString(division.division_level))),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'slug: ',
											_elm_lang$core$Basics$toString(division.slug))),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(
											A2(
												_elm_lang$core$Basics_ops['++'],
												'taxonomy_id: ',
												_elm_lang$core$Basics$toString(division.taxonomy_id))),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Abcxyz$performerDivisionsView = function (divisions) {
	var _p0 = divisions;
	if (_p0.ctor === 'Nothing') {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			A2(_elm_lang$core$List$map, _user$project$Abcxyz$performerDivisionView, _p0._0));
	}
};
var _user$project$Abcxyz$imagesView = function (images) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('ba pa3 ma2 b--red'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$List$map,
			function (url) {
				return A2(
					_elm_lang$html$Html$img,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$src(url),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'});
			},
			images));
};
var _user$project$Abcxyz$colorBackgroundView = function (colors) {
	var _p1 = colors;
	if (_p1.ctor === 'Nothing') {
		return _elm_lang$html$Html_Attributes$style(
			{ctor: '[]'});
	} else {
		return _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'backgroundColor', _1: _p1._0.iconic},
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Abcxyz$eventPerformerView = function (performer) {
	return A2(
		_elm_lang$html$Html$dl,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('ba pa3 ma2'),
			_1: {
				ctor: '::',
				_0: _user$project$Abcxyz$colorBackgroundView(performer.colors),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$dt,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Performer Image'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$core$Maybe$withDefault,
					_elm_lang$html$Html$text('no image homie'),
					A2(
						_elm_lang$core$Maybe$map,
						function (url) {
							return A2(
								_elm_lang$html$Html$img,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$src(url),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'});
						},
						performer.image)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$dt,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('name'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$dd,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(performer.name),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$dt,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('short name'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$dd,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(performer.short_name),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$dt,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('image attribution'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$dd,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													A2(_elm_lang$core$Maybe$withDefault, 'IDK, There ain\'t no image attribution tho', performer.image_attribution)),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: _user$project$Abcxyz$performerDivisionsView(performer.divisions),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$dt,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('url'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$dd,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(performer.url),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$dt,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('category'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$dd,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text(performer.category),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$dt,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text('slug'),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$dd,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text(performer.slug),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$dt,
																			{ctor: '[]'},
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html$text('image license'),
																				_1: {ctor: '[]'}
																			}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html$dd,
																				{ctor: '[]'},
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html$text(
																						A2(_elm_lang$core$Maybe$withDefault, 'IDK, There ain\'t no image license tho', performer.image_license)),
																					_1: {ctor: '[]'}
																				}),
																			_1: {
																				ctor: '::',
																				_0: A2(
																					_elm_lang$html$Html$dt,
																					{ctor: '[]'},
																					{
																						ctor: '::',
																						_0: _elm_lang$html$Html$text('num_upcoming_events'),
																						_1: {ctor: '[]'}
																					}),
																				_1: {
																					ctor: '::',
																					_0: A2(
																						_elm_lang$html$Html$dd,
																						{ctor: '[]'},
																						{
																							ctor: '::',
																							_0: _elm_lang$html$Html$text(
																								_elm_lang$core$Basics$toString(performer.num_upcoming_events)),
																							_1: {ctor: '[]'}
																						}),
																					_1: {
																						ctor: '::',
																						_0: A2(
																							_elm_lang$html$Html$dt,
																							{ctor: '[]'},
																							{
																								ctor: '::',
																								_0: _elm_lang$html$Html$text('Primary'),
																								_1: {ctor: '[]'}
																							}),
																						_1: {
																							ctor: '::',
																							_0: A2(
																								_elm_lang$html$Html$dd,
																								{ctor: '[]'},
																								{
																									ctor: '::',
																									_0: _elm_lang$html$Html$text(
																										_elm_lang$core$Basics$toString(
																											A2(_elm_lang$core$Maybe$withDefault, false, performer.primary))),
																									_1: {ctor: '[]'}
																								}),
																							_1: {
																								ctor: '::',
																								_0: A2(
																									_elm_lang$html$Html$dt,
																									{ctor: '[]'},
																									{
																										ctor: '::',
																										_0: _elm_lang$html$Html$text('popularity'),
																										_1: {ctor: '[]'}
																									}),
																								_1: {
																									ctor: '::',
																									_0: A2(
																										_elm_lang$html$Html$dd,
																										{ctor: '[]'},
																										{
																											ctor: '::',
																											_0: _elm_lang$html$Html$text(
																												_elm_lang$core$Basics$toString(performer.popularity)),
																											_1: {ctor: '[]'}
																										}),
																									_1: {
																										ctor: '::',
																										_0: A2(
																											_elm_lang$html$Html$dt,
																											{ctor: '[]'},
																											{
																												ctor: '::',
																												_0: _elm_lang$html$Html$text('ID'),
																												_1: {ctor: '[]'}
																											}),
																										_1: {
																											ctor: '::',
																											_0: A2(
																												_elm_lang$html$Html$dd,
																												{ctor: '[]'},
																												{
																													ctor: '::',
																													_0: _elm_lang$html$Html$text(
																														_elm_lang$core$Basics$toString(performer.id)),
																													_1: {ctor: '[]'}
																												}),
																											_1: {
																												ctor: '::',
																												_0: A2(
																													_elm_lang$html$Html$dt,
																													{ctor: '[]'},
																													{
																														ctor: '::',
																														_0: _elm_lang$html$Html$text('Home Venue ID'),
																														_1: {ctor: '[]'}
																													}),
																												_1: {
																													ctor: '::',
																													_0: A2(
																														_elm_lang$html$Html$dd,
																														{ctor: '[]'},
																														{
																															ctor: '::',
																															_0: _elm_lang$html$Html$text(
																																_elm_lang$core$Basics$toString(performer.home_venue_id)),
																															_1: {ctor: '[]'}
																														}),
																													_1: {
																														ctor: '::',
																														_0: A2(
																															_elm_lang$html$Html$div,
																															{ctor: '[]'},
																															A2(_elm_lang$core$List$map, _user$project$Abcxyz$taxonomyView, performer.taxonomies)),
																														_1: {
																															ctor: '::',
																															_0: _user$project$Abcxyz$performerStatsView(performer.stats),
																															_1: {
																																ctor: '::',
																																_0: _user$project$Abcxyz$imagesView(performer.images),
																																_1: {ctor: '[]'}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Abcxyz$eventStatsFloatView = F2(
	function (number, string) {
		var _p2 = number;
		if (_p2.ctor === 'Nothing') {
			return {ctor: '[]'};
		} else {
			return {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$dt,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(string),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$dd,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'$',
									_elm_lang$core$Basics$toString(_p2._0))),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			};
		}
	});
var _user$project$Abcxyz$eventStatsIntView = F2(
	function (number, string) {
		var _p3 = number;
		if (_p3.ctor === 'Nothing') {
			return {ctor: '[]'};
		} else {
			if (_p3._0 === 0) {
				return {ctor: '[]'};
			} else {
				return {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$dt,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(string),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$dd,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(_p3._0)),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				};
			}
		}
	});
var _user$project$Abcxyz$eventStatsView = function (stats) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		A2(_user$project$Abcxyz$eventStatsIntView, stats.listing_count, 'Listing Count'),
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(_user$project$Abcxyz$eventStatsFloatView, stats.highest_price, 'highest price'),
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(_user$project$Abcxyz$eventStatsFloatView, stats.average_price, 'average price'),
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(_user$project$Abcxyz$eventStatsFloatView, stats.lowest_price, 'lowest price'),
					A2(_user$project$Abcxyz$eventStatsFloatView, stats.lowest_price_good_deals, 'lowest price good deals')))));
};
var _user$project$Abcxyz$eventView = function (event) {
	return A2(
		_elm_lang$html$Html$dl,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('ba pa3 ma2'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$dt,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Title'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$dd,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(event.title),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$dt,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Short Title'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$dd,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(event.short_title),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								A2(_elm_lang$core$List$map, _user$project$Abcxyz$eventPerformerView, event.performers)),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$dt,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('ID'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$dd,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												_elm_lang$core$Basics$toString(event.id)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$dt,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Score'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$dd,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(
														_elm_lang$core$Basics$toString(event.score)),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$dt,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Type of event'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$dd,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(event.category),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: _user$project$Abcxyz$eventVenueView(event.venue),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$dt,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('Datetime Local'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_elm_lang$html$Html$dd,
																	{ctor: '[]'},
																	{
																		ctor: '::',
																		_0: _elm_lang$html$Html$text(event.datetime_local),
																		_1: {ctor: '[]'}
																	}),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_elm_lang$html$Html$dt,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text('UTC Start'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$dd,
																			{ctor: '[]'},
																			{
																				ctor: '::',
																				_0: _elm_lang$html$Html$text(event.datetime_utc),
																				_1: {ctor: '[]'}
																			}),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html$dt,
																				{ctor: '[]'},
																				{
																					ctor: '::',
																					_0: _elm_lang$html$Html$text('UTC End'),
																					_1: {ctor: '[]'}
																				}),
																			_1: {
																				ctor: '::',
																				_0: A2(
																					_elm_lang$html$Html$dd,
																					{ctor: '[]'},
																					{
																						ctor: '::',
																						_0: _elm_lang$html$Html$text(event.visible_until_utc),
																						_1: {ctor: '[]'}
																					}),
																				_1: {
																					ctor: '::',
																					_0: A2(
																						_elm_lang$html$Html$dt,
																						{ctor: '[]'},
																						{
																							ctor: '::',
																							_0: _elm_lang$html$Html$text('Creation Time'),
																							_1: {ctor: '[]'}
																						}),
																					_1: {
																						ctor: '::',
																						_0: A2(
																							_elm_lang$html$Html$dd,
																							{ctor: '[]'},
																							{
																								ctor: '::',
																								_0: _elm_lang$html$Html$text(event.created_at),
																								_1: {ctor: '[]'}
																							}),
																						_1: {
																							ctor: '::',
																							_0: A2(
																								_elm_lang$html$Html$dt,
																								{ctor: '[]'},
																								{
																									ctor: '::',
																									_0: _elm_lang$html$Html$text('Announce Date'),
																									_1: {ctor: '[]'}
																								}),
																							_1: {
																								ctor: '::',
																								_0: A2(
																									_elm_lang$html$Html$dd,
																									{ctor: '[]'},
																									{
																										ctor: '::',
																										_0: _elm_lang$html$Html$text(event.announce_date),
																										_1: {ctor: '[]'}
																									}),
																								_1: {
																									ctor: '::',
																									_0: A2(
																										_elm_lang$html$Html$dt,
																										{ctor: '[]'},
																										{
																											ctor: '::',
																											_0: _elm_lang$html$Html$text('Estimated Time'),
																											_1: {ctor: '[]'}
																										}),
																									_1: {
																										ctor: '::',
																										_0: A2(
																											_elm_lang$html$Html$dd,
																											{ctor: '[]'},
																											{
																												ctor: '::',
																												_0: _elm_lang$html$Html$text(
																													_elm_lang$core$Basics$toString(event.time_tbd)),
																												_1: {ctor: '[]'}
																											}),
																										_1: {
																											ctor: '::',
																											_0: A2(
																												_elm_lang$html$Html$dt,
																												{ctor: '[]'},
																												{
																													ctor: '::',
																													_0: _elm_lang$html$Html$text('Estimated Date'),
																													_1: {ctor: '[]'}
																												}),
																											_1: {
																												ctor: '::',
																												_0: A2(
																													_elm_lang$html$Html$dd,
																													{ctor: '[]'},
																													{
																														ctor: '::',
																														_0: _elm_lang$html$Html$text(
																															_elm_lang$core$Basics$toString(event.date_tbd)),
																														_1: {ctor: '[]'}
																													}),
																												_1: {
																													ctor: '::',
																													_0: A2(
																														_elm_lang$html$Html$dl,
																														{
																															ctor: '::',
																															_0: _elm_lang$html$Html_Attributes$class('ba pa3 ma2'),
																															_1: {ctor: '[]'}
																														},
																														_user$project$Abcxyz$eventStatsView(event.stats)),
																													_1: {
																														ctor: '::',
																														_0: A2(
																															_elm_lang$html$Html$dt,
																															{ctor: '[]'},
																															{
																																ctor: '::',
																																_0: _elm_lang$html$Html$text('Popularity'),
																																_1: {ctor: '[]'}
																															}),
																														_1: {
																															ctor: '::',
																															_0: A2(
																																_elm_lang$html$Html$dd,
																																{ctor: '[]'},
																																{
																																	ctor: '::',
																																	_0: _elm_lang$html$Html$text(
																																		_elm_lang$core$Basics$toString(event.popularity)),
																																	_1: {ctor: '[]'}
																																}),
																															_1: {
																																ctor: '::',
																																_0: A2(
																																	_elm_lang$html$Html$dt,
																																	{ctor: '[]'},
																																	{
																																		ctor: '::',
																																		_0: _elm_lang$html$Html$text('URL'),
																																		_1: {ctor: '[]'}
																																	}),
																																_1: {
																																	ctor: '::',
																																	_0: A2(
																																		_elm_lang$html$Html$dd,
																																		{ctor: '[]'},
																																		{
																																			ctor: '::',
																																			_0: _elm_lang$html$Html$text(event.url),
																																			_1: {ctor: '[]'}
																																		}),
																																	_1: {
																																		ctor: '::',
																																		_0: A2(
																																			_elm_lang$html$Html$div,
																																			{ctor: '[]'},
																																			A2(_elm_lang$core$List$map, _user$project$Abcxyz$taxonomyView, event.taxonomies)),
																																		_1: {ctor: '[]'}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Abcxyz$metaView = function (model) {
	return {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$span,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						' per page : ',
						_elm_lang$core$Basics$toString(model.meta.per_page))),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							' decoded : ',
							_elm_lang$core$Basics$toString(
								_elm_lang$core$List$length(model.events)))),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	};
};
var _user$project$Abcxyz$composeArgument = F2(
	function (name, value) {
		var _p4 = value;
		if (_p4 === '') {
			return '';
		} else {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'&',
				A2(
					_elm_lang$core$Basics_ops['++'],
					name,
					A2(_elm_lang$core$Basics_ops['++'], '=', value)));
		}
	});
var _user$project$Abcxyz$composeRequest = function (query) {
	var start = A2(
		_elm_lang$core$Basics_ops['++'],
		A2(
			_elm_lang$core$Basics_ops['++'],
			'?',
			A2(_elm_lang$core$Basics_ops['++'], 'client_id=', query.client_id)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'&postal_code=65203',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(_user$project$Abcxyz$composeArgument, 'aid', query.aid),
				A2(_user$project$Abcxyz$composeArgument, 'rid', query.rid))));
	var url = 'https://api.seatgeek.com/2/';
	var _p5 = query.endpoint;
	switch (_p5.ctor) {
		case 'Events':
			if (_p5._0.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(_elm_lang$core$Basics_ops['++'], 'events', start));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'events/',
						A2(_elm_lang$core$Basics_ops['++'], _p5._0._0, start)));
			}
		case 'Performers':
			if (_p5._0.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(_elm_lang$core$Basics_ops['++'], 'performers', start));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'performers/',
						A2(_elm_lang$core$Basics_ops['++'], _p5._0._0, start)));
			}
		case 'Venues':
			if (_p5._0.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(_elm_lang$core$Basics_ops['++'], 'venues', start));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'venues/',
						A2(_elm_lang$core$Basics_ops['++'], _p5._0._0, start)));
			}
		case 'Recommendations':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				url,
				A2(_elm_lang$core$Basics_ops['++'], 'recommendations', start));
		case 'Taxonomies':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				url,
				A2(_elm_lang$core$Basics_ops['++'], 'taxonomies', start));
		default:
			return A2(
				_elm_lang$core$Basics_ops['++'],
				url,
				A2(_elm_lang$core$Basics_ops['++'], 'genres', start));
	}
};
var _user$project$Abcxyz$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Abcxyz$initArguments = {performers: '', venues: '', datetime: '', query: '', id: '', taxonomies: '', slug: '', genres: '', city: '', state: '', country: '', postal_code: ''};
var _user$project$Abcxyz$emptyReply = {
	meta: {
		per_page: 0,
		took: 0,
		geolocation: {state: '', postal_code: '', lat: 0.0, range: '', display_name: '', city: '', country: '', lon: 0.0},
		total: 0,
		page: 0
	},
	events: {ctor: '[]'}
};
var _user$project$Abcxyz_ops = _user$project$Abcxyz_ops || {};
_user$project$Abcxyz_ops['?'] = _elm_lang$core$Maybe$withDefault;
var _user$project$Abcxyz_ops = _user$project$Abcxyz_ops || {};
_user$project$Abcxyz_ops[':='] = _elm_lang$core$Json_Decode$field;
var _user$project$Abcxyz$Model = F2(
	function (a, b) {
		return {reply: a, query: b};
	});
var _user$project$Abcxyz$Reply = F2(
	function (a, b) {
		return {meta: a, events: b};
	});
var _user$project$Abcxyz$Query = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return {endpoint: a, $arguments: b, geoip: c, lat: d, lon: e, range: f, per_page: g, page: h, sort: i, aid: j, rid: k, client_id: l};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Abcxyz$Arguments = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return {performers: a, venues: b, datetime: c, query: d, id: e, taxonomies: f, slug: g, genres: h, city: i, state: j, country: k, postal_code: l};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Abcxyz$SortArguments = F2(
	function (a, b) {
		return {field: a, direction: b};
	});
var _user$project$Abcxyz$ReplyMetaGeolocation = F8(
	function (a, b, c, d, e, f, g, h) {
		return {state: a, postal_code: b, lat: c, range: d, display_name: e, city: f, country: g, lon: h};
	});
var _user$project$Abcxyz$decodeReplyMetaGeolocation = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$ReplyMetaGeolocation),
								A2(_user$project$Abcxyz_ops[':='], 'state', _elm_lang$core$Json_Decode$string)),
							A2(_user$project$Abcxyz_ops[':='], 'postal_code', _elm_lang$core$Json_Decode$string)),
						A2(_user$project$Abcxyz_ops[':='], 'lat', _elm_lang$core$Json_Decode$float)),
					A2(_user$project$Abcxyz_ops[':='], 'range', _elm_lang$core$Json_Decode$string)),
				A2(_user$project$Abcxyz_ops[':='], 'display_name', _elm_lang$core$Json_Decode$string)),
			A2(_user$project$Abcxyz_ops[':='], 'city', _elm_lang$core$Json_Decode$string)),
		A2(_user$project$Abcxyz_ops[':='], 'country', _elm_lang$core$Json_Decode$string)),
	A2(_user$project$Abcxyz_ops[':='], 'lon', _elm_lang$core$Json_Decode$float));
var _user$project$Abcxyz$ReplyMeta = F5(
	function (a, b, c, d, e) {
		return {per_page: a, took: b, geolocation: c, total: d, page: e};
	});
var _user$project$Abcxyz$decodeReplyMeta = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$ReplyMeta),
					A2(_user$project$Abcxyz_ops[':='], 'per_page', _elm_lang$core$Json_Decode$int)),
				A2(_user$project$Abcxyz_ops[':='], 'took', _elm_lang$core$Json_Decode$int)),
			A2(_user$project$Abcxyz_ops[':='], 'geolocation', _user$project$Abcxyz$decodeReplyMetaGeolocation)),
		A2(_user$project$Abcxyz_ops[':='], 'total', _elm_lang$core$Json_Decode$int)),
	A2(_user$project$Abcxyz_ops[':='], 'page', _elm_lang$core$Json_Decode$int));
var _user$project$Abcxyz$Event = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return {datetime_utc: a, visible_until_utc: b, datetime_local: c, time_tbd: d, taxonomies: e, category: f, created_at: g, performers: h, score: i, short_title: j, venue: k, id: l, stats: m, date_tbd: n, title: o, popularity: p, url: q, announce_date: r};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Abcxyz$GCS = F2(
	function (a, b) {
		return {lon: a, lat: b};
	});
var _user$project$Abcxyz$decodeGCS = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$GCS),
		A2(_user$project$Abcxyz_ops[':='], 'lon', _elm_lang$core$Json_Decode$float)),
	A2(_user$project$Abcxyz_ops[':='], 'lat', _elm_lang$core$Json_Decode$float));
var _user$project$Abcxyz$Venue = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return {name: a, display_location: b, popularity: c, extended_address: d, location: e, name_v2: f, state: g, num_upcoming_events: h, id: i, slug: j, timezone: k, url: l, postal_code: m, city: n, country: o, score: p, address: q};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Abcxyz$decodeVenue = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									A2(
										_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
										A2(
											_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
											A2(
												_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
												A2(
													_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
													A2(
														_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
														A2(
															_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
															A2(
																_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																A2(
																	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																	_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$Venue),
																	A2(_user$project$Abcxyz_ops[':='], 'name', _elm_lang$core$Json_Decode$string)),
																A2(_user$project$Abcxyz_ops[':='], 'display_location', _elm_lang$core$Json_Decode$string)),
															A2(_user$project$Abcxyz_ops[':='], 'popularity', _elm_lang$core$Json_Decode$float)),
														A2(_user$project$Abcxyz_ops[':='], 'extended_address', _elm_lang$core$Json_Decode$string)),
													A2(_user$project$Abcxyz_ops[':='], 'location', _user$project$Abcxyz$decodeGCS)),
												A2(_user$project$Abcxyz_ops[':='], 'name_v2', _elm_lang$core$Json_Decode$string)),
											_elm_lang$core$Json_Decode$maybe(
												A2(_user$project$Abcxyz_ops[':='], 'state', _elm_lang$core$Json_Decode$string))),
										A2(_user$project$Abcxyz_ops[':='], 'num_upcoming_events', _elm_lang$core$Json_Decode$int)),
									A2(_user$project$Abcxyz_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
								A2(_user$project$Abcxyz_ops[':='], 'slug', _elm_lang$core$Json_Decode$string)),
							A2(_user$project$Abcxyz_ops[':='], 'timezone', _elm_lang$core$Json_Decode$string)),
						A2(_user$project$Abcxyz_ops[':='], 'url', _elm_lang$core$Json_Decode$string)),
					A2(_user$project$Abcxyz_ops[':='], 'postal_code', _elm_lang$core$Json_Decode$string)),
				A2(_user$project$Abcxyz_ops[':='], 'city', _elm_lang$core$Json_Decode$string)),
			A2(_user$project$Abcxyz_ops[':='], 'country', _elm_lang$core$Json_Decode$string)),
		A2(_user$project$Abcxyz_ops[':='], 'score', _elm_lang$core$Json_Decode$float)),
	A2(_user$project$Abcxyz_ops[':='], 'address', _elm_lang$core$Json_Decode$string));
var _user$project$Abcxyz$Tickets = F5(
	function (a, b, c, d, e) {
		return {listing_count: a, highest_price: b, average_price: c, lowest_price_good_deals: d, lowest_price: e};
	});
var _user$project$Abcxyz$decodeTickets = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$Tickets),
					_elm_lang$core$Json_Decode$maybe(
						A2(_user$project$Abcxyz_ops[':='], 'listing_count', _elm_lang$core$Json_Decode$int))),
				_elm_lang$core$Json_Decode$maybe(
					A2(_user$project$Abcxyz_ops[':='], 'highest_price', _elm_lang$core$Json_Decode$float))),
			_elm_lang$core$Json_Decode$maybe(
				A2(_user$project$Abcxyz_ops[':='], 'average_price', _elm_lang$core$Json_Decode$float))),
		_elm_lang$core$Json_Decode$maybe(
			A2(_user$project$Abcxyz_ops[':='], 'lowest_price_good_deals', _elm_lang$core$Json_Decode$float))),
	_elm_lang$core$Json_Decode$maybe(
		A2(_user$project$Abcxyz_ops[':='], 'lowest_price', _elm_lang$core$Json_Decode$float)));
var _user$project$Abcxyz$Performer = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return function (t) {
																				return {image: a, images: b, image_attribution: c, num_upcoming_events: d, divisions: e, genres: f, stats: g, url: h, home_venue_id: i, category: j, score: k, slug: l, primary: m, colors: n, image_license: o, name: p, popularity: q, taxonomies: r, id: s, short_name: t};
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Abcxyz$PerformerColor = F3(
	function (a, b, c) {
		return {primary: a, all: b, iconic: c};
	});
var _user$project$Abcxyz$decodePerformerColor = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$PerformerColor),
			A2(
				_user$project$Abcxyz_ops[':='],
				'primary',
				_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))),
		A2(
			_user$project$Abcxyz_ops[':='],
			'all',
			_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))),
	A2(_user$project$Abcxyz_ops[':='], 'iconic', _elm_lang$core$Json_Decode$string));
var _user$project$Abcxyz$PerformerStats = function (a) {
	return {event_count: a};
};
var _user$project$Abcxyz$decodePerformerStats = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$PerformerStats),
	A2(_user$project$Abcxyz_ops[':='], 'event_count', _elm_lang$core$Json_Decode$int));
var _user$project$Abcxyz$TaxonomyStats = F2(
	function (a, b) {
		return {performer_count: a, event_count: b};
	});
var _user$project$Abcxyz$decodeTaxonomyStats = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$TaxonomyStats),
		A2(_user$project$Abcxyz_ops[':='], 'performer_count', _elm_lang$core$Json_Decode$int)),
	A2(_user$project$Abcxyz_ops[':='], 'event_count', _elm_lang$core$Json_Decode$int));
var _user$project$Abcxyz$Taxonomy = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {images: a, name: b, short_name: c, parent_id: d, stats: e, id: f, slug: g, image: h, is_visible: i};
	});
var _user$project$Abcxyz$decodeTaxonomy = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$Taxonomy),
									A2(
										_elm_community$json_extra$Json_Decode_Extra$withDefault,
										{ctor: '[]'},
										A2(
											_user$project$Abcxyz_ops[':='],
											'images',
											_elm_community$json_extra$Json_Decode_Extra$collection(_elm_lang$core$Json_Decode$string)))),
								A2(_user$project$Abcxyz_ops[':='], 'name', _elm_lang$core$Json_Decode$string)),
							_elm_lang$core$Json_Decode$maybe(
								A2(_user$project$Abcxyz_ops[':='], 'short_name', _elm_lang$core$Json_Decode$string))),
						_elm_lang$core$Json_Decode$maybe(
							A2(_user$project$Abcxyz_ops[':='], 'parent_id', _elm_lang$core$Json_Decode$int))),
					_elm_lang$core$Json_Decode$maybe(
						A2(_user$project$Abcxyz_ops[':='], 'stats', _user$project$Abcxyz$decodeTaxonomyStats))),
				A2(_user$project$Abcxyz_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
			_elm_lang$core$Json_Decode$maybe(
				A2(_user$project$Abcxyz_ops[':='], 'slug', _elm_lang$core$Json_Decode$string))),
		_elm_lang$core$Json_Decode$maybe(
			A2(_user$project$Abcxyz_ops[':='], 'image', _elm_lang$core$Json_Decode$string))),
	_elm_lang$core$Json_Decode$maybe(
		A2(_user$project$Abcxyz_ops[':='], 'is_visible', _elm_lang$core$Json_Decode$bool)));
var _user$project$Abcxyz$Genre = F5(
	function (a, b, c, d, e) {
		return {slug: a, name: b, image: c, id: d, images: e};
	});
var _user$project$Abcxyz$decodeGenre = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$Genre),
					A2(_user$project$Abcxyz_ops[':='], 'slug', _elm_lang$core$Json_Decode$string)),
				A2(_user$project$Abcxyz_ops[':='], 'name', _elm_lang$core$Json_Decode$string)),
			_elm_lang$core$Json_Decode$maybe(
				A2(_user$project$Abcxyz_ops[':='], 'image', _elm_lang$core$Json_Decode$string))),
		A2(_user$project$Abcxyz_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
	A2(
		_elm_community$json_extra$Json_Decode_Extra$withDefault,
		{ctor: '[]'},
		A2(
			_user$project$Abcxyz_ops[':='],
			'images',
			_elm_community$json_extra$Json_Decode_Extra$collection(_elm_lang$core$Json_Decode$string))));
var _user$project$Abcxyz$Division = F6(
	function (a, b, c, d, e, f) {
		return {display_type: a, short_name: b, display_name: c, division_level: d, slug: e, taxonomy_id: f};
	});
var _user$project$Abcxyz$decodeDivision = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$Division),
						A2(_user$project$Abcxyz_ops[':='], 'display_type', _elm_lang$core$Json_Decode$string)),
					_elm_lang$core$Json_Decode$maybe(
						A2(_user$project$Abcxyz_ops[':='], 'short_name', _elm_lang$core$Json_Decode$string))),
				A2(_user$project$Abcxyz_ops[':='], 'display_name', _elm_lang$core$Json_Decode$string)),
			A2(_user$project$Abcxyz_ops[':='], 'division_level', _elm_lang$core$Json_Decode$int)),
		_elm_lang$core$Json_Decode$maybe(
			A2(_user$project$Abcxyz_ops[':='], 'slug', _elm_lang$core$Json_Decode$string))),
	A2(_user$project$Abcxyz_ops[':='], 'taxonomy_id', _elm_lang$core$Json_Decode$int));
var _user$project$Abcxyz$decodePerformer = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									A2(
										_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
										A2(
											_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
											A2(
												_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
												A2(
													_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
													A2(
														_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
														A2(
															_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
															A2(
																_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																A2(
																	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																	A2(
																		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																		A2(
																			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																			A2(
																				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																				_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$Performer),
																				_elm_lang$core$Json_Decode$maybe(
																					A2(_user$project$Abcxyz_ops[':='], 'image', _elm_lang$core$Json_Decode$string))),
																			A2(
																				_elm_community$json_extra$Json_Decode_Extra$withDefault,
																				{ctor: '[]'},
																				A2(
																					_user$project$Abcxyz_ops[':='],
																					'images',
																					_elm_community$json_extra$Json_Decode_Extra$collection(_elm_lang$core$Json_Decode$string)))),
																		_elm_lang$core$Json_Decode$maybe(
																			A2(_user$project$Abcxyz_ops[':='], 'image_attribution', _elm_lang$core$Json_Decode$string))),
																	A2(_user$project$Abcxyz_ops[':='], 'num_upcoming_events', _elm_lang$core$Json_Decode$int)),
																_elm_lang$core$Json_Decode$maybe(
																	A2(
																		_user$project$Abcxyz_ops[':='],
																		'divisions',
																		_elm_lang$core$Json_Decode$list(_user$project$Abcxyz$decodeDivision)))),
															_elm_lang$core$Json_Decode$maybe(
																A2(
																	_user$project$Abcxyz_ops[':='],
																	'genres',
																	_elm_lang$core$Json_Decode$list(_user$project$Abcxyz$decodeGenre)))),
														A2(_user$project$Abcxyz_ops[':='], 'stats', _user$project$Abcxyz$decodePerformerStats)),
													A2(_user$project$Abcxyz_ops[':='], 'url', _elm_lang$core$Json_Decode$string)),
												_elm_lang$core$Json_Decode$maybe(
													A2(_user$project$Abcxyz_ops[':='], 'home_venue_id', _elm_lang$core$Json_Decode$int))),
											A2(_user$project$Abcxyz_ops[':='], 'type', _elm_lang$core$Json_Decode$string)),
										A2(
											_elm_community$json_extra$Json_Decode_Extra$withDefault,
											0.0,
											A2(_user$project$Abcxyz_ops[':='], 'score', _elm_lang$core$Json_Decode$float))),
									A2(_user$project$Abcxyz_ops[':='], 'slug', _elm_lang$core$Json_Decode$string)),
								_elm_lang$core$Json_Decode$maybe(
									A2(_user$project$Abcxyz_ops[':='], 'primary', _elm_lang$core$Json_Decode$bool))),
							_elm_lang$core$Json_Decode$maybe(
								A2(_user$project$Abcxyz_ops[':='], 'colors', _user$project$Abcxyz$decodePerformerColor))),
						_elm_lang$core$Json_Decode$maybe(
							A2(_user$project$Abcxyz_ops[':='], 'image_license', _elm_lang$core$Json_Decode$string))),
					A2(_user$project$Abcxyz_ops[':='], 'name', _elm_lang$core$Json_Decode$string)),
				A2(_user$project$Abcxyz_ops[':='], 'popularity', _elm_lang$core$Json_Decode$float)),
			A2(
				_user$project$Abcxyz_ops[':='],
				'taxonomies',
				_elm_lang$core$Json_Decode$list(_user$project$Abcxyz$decodeTaxonomy))),
		A2(_user$project$Abcxyz_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
	A2(_user$project$Abcxyz_ops[':='], 'short_name', _elm_lang$core$Json_Decode$string));
var _user$project$Abcxyz$decodeEvent = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									A2(
										_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
										A2(
											_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
											A2(
												_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
												A2(
													_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
													A2(
														_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
														A2(
															_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
															A2(
																_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																A2(
																	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																	A2(
																		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																		_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$Event),
																		A2(_user$project$Abcxyz_ops[':='], 'datetime_utc', _elm_lang$core$Json_Decode$string)),
																	A2(_user$project$Abcxyz_ops[':='], 'visible_until_utc', _elm_lang$core$Json_Decode$string)),
																A2(_user$project$Abcxyz_ops[':='], 'datetime_local', _elm_lang$core$Json_Decode$string)),
															A2(_user$project$Abcxyz_ops[':='], 'time_tbd', _elm_lang$core$Json_Decode$bool)),
														A2(
															_user$project$Abcxyz_ops[':='],
															'taxonomies',
															_elm_lang$core$Json_Decode$list(_user$project$Abcxyz$decodeTaxonomy))),
													A2(_user$project$Abcxyz_ops[':='], 'type', _elm_lang$core$Json_Decode$string)),
												A2(_user$project$Abcxyz_ops[':='], 'created_at', _elm_lang$core$Json_Decode$string)),
											A2(
												_user$project$Abcxyz_ops[':='],
												'performers',
												_elm_lang$core$Json_Decode$list(_user$project$Abcxyz$decodePerformer))),
										A2(
											_elm_community$json_extra$Json_Decode_Extra$withDefault,
											0.0,
											A2(_user$project$Abcxyz_ops[':='], 'score', _elm_lang$core$Json_Decode$float))),
									A2(_user$project$Abcxyz_ops[':='], 'short_title', _elm_lang$core$Json_Decode$string)),
								A2(_user$project$Abcxyz_ops[':='], 'venue', _user$project$Abcxyz$decodeVenue)),
							A2(_user$project$Abcxyz_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
						A2(_user$project$Abcxyz_ops[':='], 'stats', _user$project$Abcxyz$decodeTickets)),
					A2(_user$project$Abcxyz_ops[':='], 'date_tbd', _elm_lang$core$Json_Decode$bool)),
				A2(_user$project$Abcxyz_ops[':='], 'title', _elm_lang$core$Json_Decode$string)),
			A2(_user$project$Abcxyz_ops[':='], 'popularity', _elm_lang$core$Json_Decode$float)),
		A2(_user$project$Abcxyz_ops[':='], 'url', _elm_lang$core$Json_Decode$string)),
	A2(_user$project$Abcxyz_ops[':='], 'announce_date', _elm_lang$core$Json_Decode$string));
var _user$project$Abcxyz$decodeReply = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		_elm_lang$core$Json_Decode$succeed(_user$project$Abcxyz$Reply),
		A2(_user$project$Abcxyz_ops[':='], 'meta', _user$project$Abcxyz$decodeReplyMeta)),
	A2(
		_user$project$Abcxyz_ops[':='],
		'events',
		_elm_lang$core$Json_Decode$list(_user$project$Abcxyz$decodeEvent)));
var _user$project$Abcxyz$Genres = {ctor: 'Genres'};
var _user$project$Abcxyz$Taxonomies = {ctor: 'Taxonomies'};
var _user$project$Abcxyz$Recommendations = {ctor: 'Recommendations'};
var _user$project$Abcxyz$Venues = function (a) {
	return {ctor: 'Venues', _0: a};
};
var _user$project$Abcxyz$Performers = function (a) {
	return {ctor: 'Performers', _0: a};
};
var _user$project$Abcxyz$Events = function (a) {
	return {ctor: 'Events', _0: a};
};
var _user$project$Abcxyz$Announce_date = {ctor: 'Announce_date'};
var _user$project$Abcxyz$Datetime_utc = {ctor: 'Datetime_utc'};
var _user$project$Abcxyz$Datetime_local = {ctor: 'Datetime_local'};
var _user$project$Abcxyz$Desc = {ctor: 'Desc'};
var _user$project$Abcxyz$Asc = {ctor: 'Asc'};
var _user$project$Abcxyz$initQuery = {
	endpoint: _user$project$Abcxyz$Events(_elm_lang$core$Maybe$Nothing),
	$arguments: _user$project$Abcxyz$initArguments,
	geoip: '',
	lat: '',
	lon: '',
	range: '',
	per_page: '',
	page: '',
	sort: {field: _user$project$Abcxyz$Datetime_utc, direction: _user$project$Abcxyz$Asc},
	aid: '',
	rid: '',
	client_id: 'MzUwNDE1NnwxNDgxNjA1ODM2'
};
var _user$project$Abcxyz$UpdateReply = function (a) {
	return {ctor: 'UpdateReply', _0: a};
};
var _user$project$Abcxyz$getReply = function (query) {
	var url = _user$project$Abcxyz$composeRequest(query);
	var request = A2(_elm_lang$http$Http$get, url, _user$project$Abcxyz$decodeReply);
	return A2(_elm_lang$http$Http$send, _user$project$Abcxyz$UpdateReply, request);
};
var _user$project$Abcxyz$init = {
	ctor: '_Tuple2',
	_0: {reply: _user$project$Abcxyz$emptyReply, query: _user$project$Abcxyz$initQuery},
	_1: _user$project$Abcxyz$getReply(_user$project$Abcxyz$initQuery)
};
var _user$project$Abcxyz$update = F2(
	function (msg, model) {
		var _p6 = msg;
		if (_p6.ctor === 'Discover') {
			return {
				ctor: '_Tuple2',
				_0: model,
				_1: _user$project$Abcxyz$getReply(model.query)
			};
		} else {
			if (_p6._0.ctor === 'Ok') {
				var _p7 = _p6._0._0;
				return {
					ctor: '_Tuple2',
					_0: A2(
						_user$project$Abcxyz$Model,
						A2(
							_user$project$Abcxyz$Reply,
							_p7.meta,
							A2(_elm_lang$core$Basics_ops['++'], model.reply.events, _p7.events)),
						model.query),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			} else {
				var _p8 = A2(_elm_lang$core$Debug$log, 'err', _p6._0._0);
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			}
		}
	});
var _user$project$Abcxyz$Discover = {ctor: 'Discover'};
var _user$project$Abcxyz$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				_user$project$Abcxyz$metaView(model.reply)),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					A2(_elm_lang$core$List$map, _user$project$Abcxyz$eventView, model.reply.events)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$Abcxyz$Discover),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('discover'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Abcxyz$main = _elm_lang$html$Html$program(
	{init: _user$project$Abcxyz$init, view: _user$project$Abcxyz$view, update: _user$project$Abcxyz$update, subscriptions: _user$project$Abcxyz$subscriptions})();
