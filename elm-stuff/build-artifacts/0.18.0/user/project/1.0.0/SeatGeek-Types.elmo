var _user$project$SeatGeek_Types$initArguments = {performers: '', venues: '', datetime: '', query: '', id: '', taxonomies: '', slug: '', genres: '', city: '', state: '', country: '', postal_code: ''};
var _user$project$SeatGeek_Types$SeatGeek = F2(
	function (a, b) {
		return {reply: a, query: b};
	});
var _user$project$SeatGeek_Types$Reply = F2(
	function (a, b) {
		return {meta: a, events: b};
	});
var _user$project$SeatGeek_Types$MetaGeolocation = F8(
	function (a, b, c, d, e, f, g, h) {
		return {state: a, postal_code: b, lat: c, range: d, display_name: e, city: f, country: g, lon: h};
	});
var _user$project$SeatGeek_Types$ReplyMeta = F5(
	function (a, b, c, d, e) {
		return {per_page: a, took: b, geolocation: c, total: d, page: e};
	});
var _user$project$SeatGeek_Types$Event = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return {datetime_utc: a, visible_until_utc: b, datetime_local: c, time_tbd: d, taxonomies: e, category: f, created_at: g, performers: h, score: i, short_title: j, venue: k, id: l, stats: m, date_tbd: n, title: o, popularity: p, url: q, announce_date: r};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek_Types$GCS = F2(
	function (a, b) {
		return {lon: a, lat: b};
	});
var _user$project$SeatGeek_Types$Venue = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return {name: a, display_location: b, popularity: c, extended_address: d, location: e, name_v2: f, state: g, num_upcoming_events: h, id: i, slug: j, timezone: k, url: l, postal_code: m, city: n, country: o, score: p, address: q};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek_Types$Tickets = F5(
	function (a, b, c, d, e) {
		return {listing_count: a, highest_price: b, average_price: c, lowest_price_good_deals: d, lowest_price: e};
	});
var _user$project$SeatGeek_Types$Performer = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return function (t) {
																				return {image: a, images: b, image_attribution: c, num_upcoming_events: d, divisions: e, genres: f, stats: g, url: h, home_venue_id: i, category: j, score: k, slug: l, primary: m, colors: n, image_license: o, name: p, popularity: q, taxonomies: r, id: s, short_name: t};
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek_Types$PerformerColor = F3(
	function (a, b, c) {
		return {primary: a, all: b, iconic: c};
	});
var _user$project$SeatGeek_Types$PerformerStats = function (a) {
	return {event_count: a};
};
var _user$project$SeatGeek_Types$TaxonomyStats = F2(
	function (a, b) {
		return {performer_count: a, event_count: b};
	});
var _user$project$SeatGeek_Types$Taxonomy = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {images: a, name: b, short_name: c, parent_id: d, stats: e, id: f, slug: g, image: h, is_visible: i};
	});
var _user$project$SeatGeek_Types$Genre = F5(
	function (a, b, c, d, e) {
		return {slug: a, name: b, image: c, id: d, images: e};
	});
var _user$project$SeatGeek_Types$Division = F6(
	function (a, b, c, d, e, f) {
		return {display_type: a, short_name: b, display_name: c, division_level: d, slug: e, taxonomy_id: f};
	});
var _user$project$SeatGeek_Types$Query = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return {endpoint: a, $arguments: b, geoip: c, lat: d, lon: e, range: f, per_page: g, page: h, sort: i, aid: j, rid: k, client_id: l};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek_Types$Arguments = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return {performers: a, venues: b, datetime: c, query: d, id: e, taxonomies: f, slug: g, genres: h, city: i, state: j, country: k, postal_code: l};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek_Types$SortArguments = F2(
	function (a, b) {
		return {field: a, direction: b};
	});
var _user$project$SeatGeek_Types$Genres = {ctor: 'Genres'};
var _user$project$SeatGeek_Types$Taxonomies = {ctor: 'Taxonomies'};
var _user$project$SeatGeek_Types$Recommendations = {ctor: 'Recommendations'};
var _user$project$SeatGeek_Types$Venues = function (a) {
	return {ctor: 'Venues', _0: a};
};
var _user$project$SeatGeek_Types$Performers = function (a) {
	return {ctor: 'Performers', _0: a};
};
var _user$project$SeatGeek_Types$Events = function (a) {
	return {ctor: 'Events', _0: a};
};
var _user$project$SeatGeek_Types$Announce_date = {ctor: 'Announce_date'};
var _user$project$SeatGeek_Types$Datetime_utc = {ctor: 'Datetime_utc'};
var _user$project$SeatGeek_Types$Datetime_local = {ctor: 'Datetime_local'};
var _user$project$SeatGeek_Types$Desc = {ctor: 'Desc'};
var _user$project$SeatGeek_Types$Asc = {ctor: 'Asc'};
var _user$project$SeatGeek_Types$initQuery = {
	endpoint: _user$project$SeatGeek_Types$Events(_elm_lang$core$Maybe$Nothing),
	$arguments: _user$project$SeatGeek_Types$initArguments,
	geoip: '',
	lat: '',
	lon: '',
	range: '',
	per_page: '',
	page: '',
	sort: {field: _user$project$SeatGeek_Types$Datetime_utc, direction: _user$project$SeatGeek_Types$Asc},
	aid: '',
	rid: '',
	client_id: 'MzUwNDE1NnwxNDgxNjA1ODM2'
};
