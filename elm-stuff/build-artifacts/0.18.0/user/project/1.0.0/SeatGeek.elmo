var _user$project$SeatGeek$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$SeatGeek$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{ctor: '[]'});
};
var _user$project$SeatGeek$composeArgument = F2(
	function (name, value) {
		var _p1 = value;
		if (_p1 === '') {
			return '';
		} else {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'&',
				A2(
					_elm_lang$core$Basics_ops['++'],
					name,
					A2(_elm_lang$core$Basics_ops['++'], '=', value)));
		}
	});
var _user$project$SeatGeek$composeRequest = function (query) {
	var start = A2(
		_elm_lang$core$Basics_ops['++'],
		A2(
			_elm_lang$core$Basics_ops['++'],
			'?',
			A2(_elm_lang$core$Basics_ops['++'], 'client_id=', query.client_id)),
		A2(
			_elm_lang$core$Basics_ops['++'],
			'&postal_code=10001&per_page=300',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(_user$project$SeatGeek$composeArgument, 'aid', query.aid),
				A2(_user$project$SeatGeek$composeArgument, 'rid', query.rid))));
	var url = 'https://api.seatgeek.com/2/';
	var _p2 = query.endpoint;
	switch (_p2.ctor) {
		case 'Events':
			if (_p2._0.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(_elm_lang$core$Basics_ops['++'], 'events', start));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'events/',
						A2(_elm_lang$core$Basics_ops['++'], _p2._0._0, start)));
			}
		case 'Performers':
			if (_p2._0.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(_elm_lang$core$Basics_ops['++'], 'performers', start));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'performers/',
						A2(_elm_lang$core$Basics_ops['++'], _p2._0._0, start)));
			}
		case 'Venues':
			if (_p2._0.ctor === 'Nothing') {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(_elm_lang$core$Basics_ops['++'], 'venues', start));
			} else {
				return A2(
					_elm_lang$core$Basics_ops['++'],
					url,
					A2(
						_elm_lang$core$Basics_ops['++'],
						'venues/',
						A2(_elm_lang$core$Basics_ops['++'], _p2._0._0, start)));
			}
		case 'Recommendations':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				url,
				A2(_elm_lang$core$Basics_ops['++'], 'recommendations', start));
		case 'Taxonomies':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				url,
				A2(_elm_lang$core$Basics_ops['++'], 'taxonomies', start));
		default:
			return A2(
				_elm_lang$core$Basics_ops['++'],
				url,
				A2(_elm_lang$core$Basics_ops['++'], 'genres', start));
	}
};
var _user$project$SeatGeek$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$SeatGeek$initArguments = {performers: '', venues: '', datetime: '', query: '', id: '', taxonomies: '', slug: '', genres: '', city: '', state: '', country: '', postal_code: ''};
var _user$project$SeatGeek$emptyReply = {
	meta: {
		per_page: 0,
		took: 0,
		geolocation: {state: '', postal_code: '', lat: 0.0, range: '', display_name: '', city: '', country: '', lon: 0.0},
		total: 0,
		page: 0
	},
	events: {ctor: '[]'}
};
var _user$project$SeatGeek_ops = _user$project$SeatGeek_ops || {};
_user$project$SeatGeek_ops['?'] = _elm_lang$core$Maybe$withDefault;
var _user$project$SeatGeek_ops = _user$project$SeatGeek_ops || {};
_user$project$SeatGeek_ops[':='] = _elm_lang$core$Json_Decode$field;
var _user$project$SeatGeek$Model = F2(
	function (a, b) {
		return {reply: a, query: b};
	});
var _user$project$SeatGeek$Reply = F2(
	function (a, b) {
		return {meta: a, events: b};
	});
var _user$project$SeatGeek$Query = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return {endpoint: a, $arguments: b, geoip: c, lat: d, lon: e, range: f, per_page: g, page: h, sort: i, aid: j, rid: k, client_id: l};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek$Arguments = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return {performers: a, venues: b, datetime: c, query: d, id: e, taxonomies: f, slug: g, genres: h, city: i, state: j, country: k, postal_code: l};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek$SortArguments = F2(
	function (a, b) {
		return {field: a, direction: b};
	});
var _user$project$SeatGeek$MetaGeolocation = F8(
	function (a, b, c, d, e, f, g, h) {
		return {state: a, postal_code: b, lat: c, range: d, display_name: e, city: f, country: g, lon: h};
	});
var _user$project$SeatGeek$decodeMetaGeolocation = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$MetaGeolocation),
								A2(_user$project$SeatGeek_ops[':='], 'state', _elm_lang$core$Json_Decode$string)),
							A2(_user$project$SeatGeek_ops[':='], 'postal_code', _elm_lang$core$Json_Decode$string)),
						A2(_user$project$SeatGeek_ops[':='], 'lat', _elm_lang$core$Json_Decode$float)),
					A2(_user$project$SeatGeek_ops[':='], 'range', _elm_lang$core$Json_Decode$string)),
				A2(_user$project$SeatGeek_ops[':='], 'display_name', _elm_lang$core$Json_Decode$string)),
			A2(_user$project$SeatGeek_ops[':='], 'city', _elm_lang$core$Json_Decode$string)),
		A2(_user$project$SeatGeek_ops[':='], 'country', _elm_lang$core$Json_Decode$string)),
	A2(_user$project$SeatGeek_ops[':='], 'lon', _elm_lang$core$Json_Decode$float));
var _user$project$SeatGeek$ReplyMeta = F5(
	function (a, b, c, d, e) {
		return {per_page: a, took: b, geolocation: c, total: d, page: e};
	});
var _user$project$SeatGeek$decodeReplyMeta = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$ReplyMeta),
					A2(_user$project$SeatGeek_ops[':='], 'per_page', _elm_lang$core$Json_Decode$int)),
				A2(_user$project$SeatGeek_ops[':='], 'took', _elm_lang$core$Json_Decode$int)),
			A2(_user$project$SeatGeek_ops[':='], 'geolocation', _user$project$SeatGeek$decodeMetaGeolocation)),
		A2(_user$project$SeatGeek_ops[':='], 'total', _elm_lang$core$Json_Decode$int)),
	A2(_user$project$SeatGeek_ops[':='], 'page', _elm_lang$core$Json_Decode$int));
var _user$project$SeatGeek$Event = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return {datetime_utc: a, visible_until_utc: b, datetime_local: c, time_tbd: d, taxonomies: e, category: f, created_at: g, performers: h, score: i, short_title: j, venue: k, id: l, stats: m, date_tbd: n, title: o, popularity: p, url: q, announce_date: r};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek$GCS = F2(
	function (a, b) {
		return {lon: a, lat: b};
	});
var _user$project$SeatGeek$decodeGCS = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$GCS),
		A2(_user$project$SeatGeek_ops[':='], 'lon', _elm_lang$core$Json_Decode$float)),
	A2(_user$project$SeatGeek_ops[':='], 'lat', _elm_lang$core$Json_Decode$float));
var _user$project$SeatGeek$Venue = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return {name: a, display_location: b, popularity: c, extended_address: d, location: e, name_v2: f, state: g, num_upcoming_events: h, id: i, slug: j, timezone: k, url: l, postal_code: m, city: n, country: o, score: p, address: q};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek$decodeVenue = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									A2(
										_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
										A2(
											_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
											A2(
												_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
												A2(
													_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
													A2(
														_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
														A2(
															_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
															A2(
																_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																A2(
																	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																	_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$Venue),
																	A2(_user$project$SeatGeek_ops[':='], 'name', _elm_lang$core$Json_Decode$string)),
																A2(_user$project$SeatGeek_ops[':='], 'display_location', _elm_lang$core$Json_Decode$string)),
															A2(_user$project$SeatGeek_ops[':='], 'popularity', _elm_lang$core$Json_Decode$float)),
														A2(_user$project$SeatGeek_ops[':='], 'extended_address', _elm_lang$core$Json_Decode$string)),
													A2(_user$project$SeatGeek_ops[':='], 'location', _user$project$SeatGeek$decodeGCS)),
												A2(_user$project$SeatGeek_ops[':='], 'name_v2', _elm_lang$core$Json_Decode$string)),
											_elm_lang$core$Json_Decode$maybe(
												A2(_user$project$SeatGeek_ops[':='], 'state', _elm_lang$core$Json_Decode$string))),
										A2(_user$project$SeatGeek_ops[':='], 'num_upcoming_events', _elm_lang$core$Json_Decode$int)),
									A2(_user$project$SeatGeek_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
								A2(_user$project$SeatGeek_ops[':='], 'slug', _elm_lang$core$Json_Decode$string)),
							_elm_lang$core$Json_Decode$maybe(
								A2(_user$project$SeatGeek_ops[':='], 'timezone', _elm_lang$core$Json_Decode$string))),
						A2(_user$project$SeatGeek_ops[':='], 'url', _elm_lang$core$Json_Decode$string)),
					A2(_user$project$SeatGeek_ops[':='], 'postal_code', _elm_lang$core$Json_Decode$string)),
				A2(_user$project$SeatGeek_ops[':='], 'city', _elm_lang$core$Json_Decode$string)),
			A2(_user$project$SeatGeek_ops[':='], 'country', _elm_lang$core$Json_Decode$string)),
		A2(_user$project$SeatGeek_ops[':='], 'score', _elm_lang$core$Json_Decode$float)),
	A2(_user$project$SeatGeek_ops[':='], 'address', _elm_lang$core$Json_Decode$string));
var _user$project$SeatGeek$Tickets = F5(
	function (a, b, c, d, e) {
		return {listing_count: a, highest_price: b, average_price: c, lowest_price_good_deals: d, lowest_price: e};
	});
var _user$project$SeatGeek$decodeTickets = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$Tickets),
					_elm_lang$core$Json_Decode$maybe(
						A2(_user$project$SeatGeek_ops[':='], 'listing_count', _elm_lang$core$Json_Decode$int))),
				_elm_lang$core$Json_Decode$maybe(
					A2(_user$project$SeatGeek_ops[':='], 'highest_price', _elm_lang$core$Json_Decode$float))),
			_elm_lang$core$Json_Decode$maybe(
				A2(_user$project$SeatGeek_ops[':='], 'average_price', _elm_lang$core$Json_Decode$float))),
		_elm_lang$core$Json_Decode$maybe(
			A2(_user$project$SeatGeek_ops[':='], 'lowest_price_good_deals', _elm_lang$core$Json_Decode$float))),
	_elm_lang$core$Json_Decode$maybe(
		A2(_user$project$SeatGeek_ops[':='], 'lowest_price', _elm_lang$core$Json_Decode$float)));
var _user$project$SeatGeek$Performer = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return function (t) {
																				return {image: a, images: b, image_attribution: c, num_upcoming_events: d, divisions: e, genres: f, stats: g, url: h, home_venue_id: i, category: j, score: k, slug: l, primary: m, colors: n, image_license: o, name: p, popularity: q, taxonomies: r, id: s, short_name: t};
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$SeatGeek$PerformerColor = F3(
	function (a, b, c) {
		return {primary: a, all: b, iconic: c};
	});
var _user$project$SeatGeek$decodePerformerColor = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$PerformerColor),
			A2(
				_user$project$SeatGeek_ops[':='],
				'primary',
				_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))),
		A2(
			_user$project$SeatGeek_ops[':='],
			'all',
			_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string))),
	A2(_user$project$SeatGeek_ops[':='], 'iconic', _elm_lang$core$Json_Decode$string));
var _user$project$SeatGeek$PerformerStats = function (a) {
	return {event_count: a};
};
var _user$project$SeatGeek$decodePerformerStats = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$PerformerStats),
	A2(_user$project$SeatGeek_ops[':='], 'event_count', _elm_lang$core$Json_Decode$int));
var _user$project$SeatGeek$TaxonomyStats = F2(
	function (a, b) {
		return {performer_count: a, event_count: b};
	});
var _user$project$SeatGeek$decodeTaxonomyStats = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$TaxonomyStats),
		A2(_user$project$SeatGeek_ops[':='], 'performer_count', _elm_lang$core$Json_Decode$int)),
	A2(_user$project$SeatGeek_ops[':='], 'event_count', _elm_lang$core$Json_Decode$int));
var _user$project$SeatGeek$Taxonomy = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {images: a, name: b, short_name: c, parent_id: d, stats: e, id: f, slug: g, image: h, is_visible: i};
	});
var _user$project$SeatGeek$decodeTaxonomy = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$Taxonomy),
									A2(
										_elm_community$json_extra$Json_Decode_Extra$withDefault,
										{ctor: '[]'},
										A2(
											_user$project$SeatGeek_ops[':='],
											'images',
											_elm_community$json_extra$Json_Decode_Extra$collection(_elm_lang$core$Json_Decode$string)))),
								A2(_user$project$SeatGeek_ops[':='], 'name', _elm_lang$core$Json_Decode$string)),
							_elm_lang$core$Json_Decode$maybe(
								A2(_user$project$SeatGeek_ops[':='], 'short_name', _elm_lang$core$Json_Decode$string))),
						_elm_lang$core$Json_Decode$maybe(
							A2(_user$project$SeatGeek_ops[':='], 'parent_id', _elm_lang$core$Json_Decode$int))),
					_elm_lang$core$Json_Decode$maybe(
						A2(_user$project$SeatGeek_ops[':='], 'stats', _user$project$SeatGeek$decodeTaxonomyStats))),
				A2(_user$project$SeatGeek_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
			_elm_lang$core$Json_Decode$maybe(
				A2(_user$project$SeatGeek_ops[':='], 'slug', _elm_lang$core$Json_Decode$string))),
		_elm_lang$core$Json_Decode$maybe(
			A2(_user$project$SeatGeek_ops[':='], 'image', _elm_lang$core$Json_Decode$string))),
	_elm_lang$core$Json_Decode$maybe(
		A2(_user$project$SeatGeek_ops[':='], 'is_visible', _elm_lang$core$Json_Decode$bool)));
var _user$project$SeatGeek$Genre = F5(
	function (a, b, c, d, e) {
		return {slug: a, name: b, image: c, id: d, images: e};
	});
var _user$project$SeatGeek$decodeGenre = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$Genre),
					A2(_user$project$SeatGeek_ops[':='], 'slug', _elm_lang$core$Json_Decode$string)),
				A2(_user$project$SeatGeek_ops[':='], 'name', _elm_lang$core$Json_Decode$string)),
			_elm_lang$core$Json_Decode$maybe(
				A2(_user$project$SeatGeek_ops[':='], 'image', _elm_lang$core$Json_Decode$string))),
		A2(_user$project$SeatGeek_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
	A2(
		_elm_community$json_extra$Json_Decode_Extra$withDefault,
		{ctor: '[]'},
		A2(
			_user$project$SeatGeek_ops[':='],
			'images',
			_elm_community$json_extra$Json_Decode_Extra$collection(_elm_lang$core$Json_Decode$string))));
var _user$project$SeatGeek$Division = F6(
	function (a, b, c, d, e, f) {
		return {display_type: a, short_name: b, display_name: c, division_level: d, slug: e, taxonomy_id: f};
	});
var _user$project$SeatGeek$decodeDivision = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$Division),
						A2(_user$project$SeatGeek_ops[':='], 'display_type', _elm_lang$core$Json_Decode$string)),
					_elm_lang$core$Json_Decode$maybe(
						A2(_user$project$SeatGeek_ops[':='], 'short_name', _elm_lang$core$Json_Decode$string))),
				A2(_user$project$SeatGeek_ops[':='], 'display_name', _elm_lang$core$Json_Decode$string)),
			A2(_user$project$SeatGeek_ops[':='], 'division_level', _elm_lang$core$Json_Decode$int)),
		_elm_lang$core$Json_Decode$maybe(
			A2(_user$project$SeatGeek_ops[':='], 'slug', _elm_lang$core$Json_Decode$string))),
	A2(_user$project$SeatGeek_ops[':='], 'taxonomy_id', _elm_lang$core$Json_Decode$int));
var _user$project$SeatGeek$decodePerformer = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									A2(
										_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
										A2(
											_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
											A2(
												_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
												A2(
													_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
													A2(
														_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
														A2(
															_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
															A2(
																_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																A2(
																	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																	A2(
																		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																		A2(
																			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																			A2(
																				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																				_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$Performer),
																				_elm_lang$core$Json_Decode$maybe(
																					A2(_user$project$SeatGeek_ops[':='], 'image', _elm_lang$core$Json_Decode$string))),
																			A2(
																				_elm_community$json_extra$Json_Decode_Extra$withDefault,
																				{ctor: '[]'},
																				A2(
																					_user$project$SeatGeek_ops[':='],
																					'images',
																					_elm_community$json_extra$Json_Decode_Extra$collection(_elm_lang$core$Json_Decode$string)))),
																		_elm_lang$core$Json_Decode$maybe(
																			A2(_user$project$SeatGeek_ops[':='], 'image_attribution', _elm_lang$core$Json_Decode$string))),
																	A2(_user$project$SeatGeek_ops[':='], 'num_upcoming_events', _elm_lang$core$Json_Decode$int)),
																_elm_lang$core$Json_Decode$maybe(
																	A2(
																		_user$project$SeatGeek_ops[':='],
																		'divisions',
																		_elm_lang$core$Json_Decode$list(_user$project$SeatGeek$decodeDivision)))),
															_elm_lang$core$Json_Decode$maybe(
																A2(
																	_user$project$SeatGeek_ops[':='],
																	'genres',
																	_elm_lang$core$Json_Decode$list(_user$project$SeatGeek$decodeGenre)))),
														A2(_user$project$SeatGeek_ops[':='], 'stats', _user$project$SeatGeek$decodePerformerStats)),
													A2(_user$project$SeatGeek_ops[':='], 'url', _elm_lang$core$Json_Decode$string)),
												_elm_lang$core$Json_Decode$maybe(
													A2(_user$project$SeatGeek_ops[':='], 'home_venue_id', _elm_lang$core$Json_Decode$int))),
											A2(_user$project$SeatGeek_ops[':='], 'type', _elm_lang$core$Json_Decode$string)),
										A2(
											_elm_community$json_extra$Json_Decode_Extra$withDefault,
											0.0,
											A2(_user$project$SeatGeek_ops[':='], 'score', _elm_lang$core$Json_Decode$float))),
									A2(_user$project$SeatGeek_ops[':='], 'slug', _elm_lang$core$Json_Decode$string)),
								_elm_lang$core$Json_Decode$maybe(
									A2(_user$project$SeatGeek_ops[':='], 'primary', _elm_lang$core$Json_Decode$bool))),
							_elm_lang$core$Json_Decode$maybe(
								A2(_user$project$SeatGeek_ops[':='], 'colors', _user$project$SeatGeek$decodePerformerColor))),
						_elm_lang$core$Json_Decode$maybe(
							A2(_user$project$SeatGeek_ops[':='], 'image_license', _elm_lang$core$Json_Decode$string))),
					A2(_user$project$SeatGeek_ops[':='], 'name', _elm_lang$core$Json_Decode$string)),
				A2(_user$project$SeatGeek_ops[':='], 'popularity', _elm_lang$core$Json_Decode$float)),
			A2(
				_user$project$SeatGeek_ops[':='],
				'taxonomies',
				_elm_lang$core$Json_Decode$list(_user$project$SeatGeek$decodeTaxonomy))),
		A2(_user$project$SeatGeek_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
	A2(_user$project$SeatGeek_ops[':='], 'short_name', _elm_lang$core$Json_Decode$string));
var _user$project$SeatGeek$decodeEvent = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									A2(
										_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
										A2(
											_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
											A2(
												_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
												A2(
													_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
													A2(
														_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
														A2(
															_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
															A2(
																_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																A2(
																	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																	A2(
																		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
																		_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$Event),
																		A2(_user$project$SeatGeek_ops[':='], 'datetime_utc', _elm_lang$core$Json_Decode$string)),
																	A2(_user$project$SeatGeek_ops[':='], 'visible_until_utc', _elm_lang$core$Json_Decode$string)),
																A2(_user$project$SeatGeek_ops[':='], 'datetime_local', _elm_lang$core$Json_Decode$string)),
															A2(_user$project$SeatGeek_ops[':='], 'time_tbd', _elm_lang$core$Json_Decode$bool)),
														A2(
															_user$project$SeatGeek_ops[':='],
															'taxonomies',
															_elm_lang$core$Json_Decode$list(_user$project$SeatGeek$decodeTaxonomy))),
													A2(_user$project$SeatGeek_ops[':='], 'type', _elm_lang$core$Json_Decode$string)),
												A2(_user$project$SeatGeek_ops[':='], 'created_at', _elm_lang$core$Json_Decode$string)),
											A2(
												_user$project$SeatGeek_ops[':='],
												'performers',
												_elm_lang$core$Json_Decode$list(_user$project$SeatGeek$decodePerformer))),
										A2(
											_elm_community$json_extra$Json_Decode_Extra$withDefault,
											0.0,
											A2(_user$project$SeatGeek_ops[':='], 'score', _elm_lang$core$Json_Decode$float))),
									A2(_user$project$SeatGeek_ops[':='], 'short_title', _elm_lang$core$Json_Decode$string)),
								A2(_user$project$SeatGeek_ops[':='], 'venue', _user$project$SeatGeek$decodeVenue)),
							A2(_user$project$SeatGeek_ops[':='], 'id', _elm_lang$core$Json_Decode$int)),
						A2(_user$project$SeatGeek_ops[':='], 'stats', _user$project$SeatGeek$decodeTickets)),
					A2(_user$project$SeatGeek_ops[':='], 'date_tbd', _elm_lang$core$Json_Decode$bool)),
				A2(_user$project$SeatGeek_ops[':='], 'title', _elm_lang$core$Json_Decode$string)),
			A2(_user$project$SeatGeek_ops[':='], 'popularity', _elm_lang$core$Json_Decode$float)),
		A2(_user$project$SeatGeek_ops[':='], 'url', _elm_lang$core$Json_Decode$string)),
	A2(_user$project$SeatGeek_ops[':='], 'announce_date', _elm_lang$core$Json_Decode$string));
var _user$project$SeatGeek$decodeReply = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		_elm_lang$core$Json_Decode$succeed(_user$project$SeatGeek$Reply),
		A2(_user$project$SeatGeek_ops[':='], 'meta', _user$project$SeatGeek$decodeReplyMeta)),
	A2(
		_user$project$SeatGeek_ops[':='],
		'events',
		_elm_lang$core$Json_Decode$list(_user$project$SeatGeek$decodeEvent)));
var _user$project$SeatGeek$Genres = {ctor: 'Genres'};
var _user$project$SeatGeek$Taxonomies = {ctor: 'Taxonomies'};
var _user$project$SeatGeek$Recommendations = {ctor: 'Recommendations'};
var _user$project$SeatGeek$Venues = function (a) {
	return {ctor: 'Venues', _0: a};
};
var _user$project$SeatGeek$Performers = function (a) {
	return {ctor: 'Performers', _0: a};
};
var _user$project$SeatGeek$Events = function (a) {
	return {ctor: 'Events', _0: a};
};
var _user$project$SeatGeek$Announce_date = {ctor: 'Announce_date'};
var _user$project$SeatGeek$Datetime_utc = {ctor: 'Datetime_utc'};
var _user$project$SeatGeek$Datetime_local = {ctor: 'Datetime_local'};
var _user$project$SeatGeek$Desc = {ctor: 'Desc'};
var _user$project$SeatGeek$Asc = {ctor: 'Asc'};
var _user$project$SeatGeek$initQuery = {
	endpoint: _user$project$SeatGeek$Events(_elm_lang$core$Maybe$Nothing),
	$arguments: _user$project$SeatGeek$initArguments,
	geoip: '',
	lat: '',
	lon: '',
	range: '',
	per_page: '',
	page: '',
	sort: {field: _user$project$SeatGeek$Datetime_utc, direction: _user$project$SeatGeek$Asc},
	aid: '',
	rid: '',
	client_id: 'MzUwNDE1NnwxNDgxNjA1ODM2'
};
var _user$project$SeatGeek$init = {
	ctor: '_Tuple2',
	_0: {reply: _user$project$SeatGeek$emptyReply, query: _user$project$SeatGeek$initQuery},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$SeatGeek$main = _elm_lang$html$Html$program(
	{init: _user$project$SeatGeek$init, view: _user$project$SeatGeek$view, update: _user$project$SeatGeek$update, subscriptions: _user$project$SeatGeek$subscriptions})();
var _user$project$SeatGeek$GetReply = function (a) {
	return {ctor: 'GetReply', _0: a};
};
var _user$project$SeatGeek$Discover = {ctor: 'Discover'};
