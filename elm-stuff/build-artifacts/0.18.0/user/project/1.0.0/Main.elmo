var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$stringToEmoji = function (string) {
	var _p0 = string;
	switch (_p0) {
		case 'concert':
			return 'üéµ';
		case 'music_festival':
			return 'üé∂';
		case 'sports':
			return 'üèÜ';
		case 'theater':
			return 'üé≠';
		case 'basketball':
			return 'üèÄ';
		case 'nba':
			return '‚õπ';
		case 'ncaa_football':
			return 'üë®üèª‚Äçüéì';
		case 'ncaa_basketball':
			return 'üë®üèª‚Äçüéì';
		case 'ncaa_womens_basketball':
			return 'üë©‚Äçüéì';
		case 'wnba':
			return '‚õπÔ∏è‚Äç‚ôÄÔ∏è';
		case 'family':
			return 'üö∏';
		case 'broadway_tickets_national':
			return 'üéü';
		case 'dance_performance_tour':
			return 'üíÉ';
		case 'classical':
			return 'üéº';
		case 'classical_orchestral_instrumental':
			return 'üéª';
		case 'comedy':
			return 'ü§£';
		case 'hockey':
			return 'üèí';
		case 'fighting':
			return 'ü§º‚Äç‚ôÇÔ∏è';
		case 'soccer':
			return '‚öΩ';
		case 'wrestling':
			return 'ü§º';
		case 'football':
			return 'üèà';
		case 'auto_racing':
			return 'üèéÔ∏è';
		case 'animal_sports':
			return 'üêæ';
		case 'horse_racing':
			return 'üèá';
		case 'rodeo':
			return 'ü§†';
		case 'nfl':
			return 'üèüÔ∏è';
		case 'cirque_du_soleil':
			return 'ü§∏';
		case 'classical_opera':
			return 'üé§';
		default:
			return 'ü§∑';
	}
};
var _user$project$Main$bgImg = function (imgPath) {
	return _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'background-image',
				_1: A2(
					_elm_lang$core$Basics_ops['++'],
					'url(\'',
					A2(_elm_lang$core$Basics_ops['++'], imgPath, '\')'))
			},
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$featherIcon = function (icon) {
	return _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'background-image',
				_1: A2(
					_elm_lang$core$Basics_ops['++'],
					'url(\'https://icongr.am/feather/',
					A2(_elm_lang$core$Basics_ops['++'], icon, '.svg?size=20&color=ffffff\')'))
			},
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$maybeImage = function (performers) {
	var _p1 = _elm_lang$core$List$head(performers);
	if (_p1.ctor === 'Just') {
		return _p1._0.image;
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _user$project$Main$eventIcons = function (event) {
	var toIcon = function (x) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('flex w4 mb2 flex-column items-center overflow-hidden'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('f-subheadline f1-m'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_user$project$Main$stringToEmoji(x.name)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('pv2 o-70'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(x.name),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	};
	return A2(
		_elm_lang$html$Html$ul,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('list ma0 pa4 pb3 flex justify-around items-center bg-black-40'),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, toIcon, event.taxonomies));
};
var _user$project$Main$progressBar = function (num) {
	var percent = num * 100;
	var _p2 = percent;
	if (_p2 === 0.0) {
		return _elm_lang$html$Html$text('');
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('w-100 bg-white-10 overflow-hidden br-pill'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'width',
									_1: A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString(_p2),
										'%')
								},
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('animated slideInleft pt2 bg-red-50'),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Main$eventPopularity = function (event) {
	var _p3 = event.popularity;
	if (_p3 === 0.0) {
		return _elm_lang$html$Html$text('');
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('flex items-center ph4 pv4 bg-black-20'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('mr3 f2'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('üî•'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('flex flex-column flex-auto h2 justify-around'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _user$project$Main$progressBar(event.popularity),
							_1: {
								ctor: '::',
								_0: _user$project$Main$progressBar(event.score),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	}
};
var _user$project$Main$eventTickets = function (event) {
	var emptyTickets = A2(
		_elm_lang$core$List$all,
		function (x) {
			return _elm_lang$core$Native_Utils.eq(x, _elm_lang$core$Maybe$Nothing);
		},
		{
			ctor: '::',
			_0: event.stats.highest_price,
			_1: {
				ctor: '::',
				_0: event.stats.average_price,
				_1: {
					ctor: '::',
					_0: event.stats.lowest_price,
					_1: {
						ctor: '::',
						_0: event.stats.lowest_price_good_deals,
						_1: {ctor: '[]'}
					}
				}
			}
		});
	var _p4 = emptyTickets;
	if (_p4 === false) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('flex items-center pa4 bg-black-20'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(event.stats)),
				_1: {ctor: '[]'}
			});
	} else {
		return _elm_lang$html$Html$text('');
	}
};
var _user$project$Main$eventTime = F2(
	function (event, now) {
		var eventDate = _elm_lang$core$Result$toMaybe(
			_elm_lang$core$Date$fromString(event.datetime_local));
		var invalidDates = A2(
			_elm_lang$core$List$any,
			function (x) {
				return _elm_lang$core$Native_Utils.eq(x, _elm_lang$core$Maybe$Nothing);
			},
			{
				ctor: '::',
				_0: eventDate,
				_1: {
					ctor: '::',
					_0: now,
					_1: {ctor: '[]'}
				}
			});
		var deltaRecord = function () {
			var _p5 = invalidDates;
			if (_p5 === true) {
				return 'Golly, it looks like there is a bee in our proverbial bonnet.';
			} else {
				return _elm_lang$core$Basics$toString(
					A3(_elm_lang$core$Maybe$map2, _rluiten$elm_date_extra$Date_Extra_Duration$diffDays, eventDate, now));
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('bg-black-20 pa3'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(event.datetime_local)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(eventDate)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(now)),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										_elm_lang$core$Basics$toString(deltaRecord)),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			});
	});
var _user$project$Main$eventTitle = function (event) {
	var textSize = F2(
		function (x, y) {
			var _p6 = (_elm_lang$core$String$length(x) / y) | 0;
			switch (_p6) {
				case 0:
					return ' f1 f2-m';
				case 1:
					return ' f2 f3-m';
				case 2:
					return ' f3 f4-m';
				case 3:
					return ' f4 f5-m';
				default:
					return ' f5 f6-m';
			}
		});
	var icon = function (x) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _user$project$Main$featherIcon(x),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('contain dib bg-center grow mr2 mt1 pt1 pb3 pl1 pr3'),
					_1: {ctor: '[]'}
				}
			},
			{ctor: '[]'});
	};
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('bg-black-20 pa4'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'fw7',
							A2(textSize, event.title, 30))),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(event.title),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('fw5 mv3 f3 flex items-start'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: icon('at-sign'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(event.venue.name),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$selectedEvent = function (model) {
	return _elm_lang$core$List$head(
		A2(
			_elm_lang$core$List$filter,
			function (x) {
				return _elm_lang$core$Native_Utils.eq(
					model.selectedEvent,
					_elm_lang$core$Maybe$Just(x.id));
			},
			model.seatgeek.events));
};
var _user$project$Main$discoverToolsView = function () {
	var icon = function (x) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('animated bounceIn pointer hover-bg-black-20 br-pill pa2'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$Main$featherIcon(x),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('contain bg-center grow pt3 pb2 pl3 pr2'),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	};
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('flex justify-end'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: icon('search'),
			_1: {
				ctor: '::',
				_0: icon('map-pin'),
				_1: {
					ctor: '::',
					_0: icon('thumbs-up'),
					_1: {
						ctor: '::',
						_0: icon('tag'),
						_1: {
							ctor: '::',
							_0: icon('at-sign'),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
}();
var _user$project$Main$navTab = function (tuple) {
	var captionClasses = _elm_lang$html$Html_Attributes$class('pa3 pa2-m dn dib-ns');
	var iconClasses = _elm_lang$html$Html_Attributes$class('w2 h2 w1-m h1-m contain');
	var page = _elm_lang$core$Tuple$first(tuple);
	var icon = _elm_lang$core$Tuple$second(tuple);
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('animated zoomInLeft grow pr3-l pl4-l pv2-l mv2-l ph2 pointer hover-bg-black-50 z-999 flex items-center br--right-l br-pill-l'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: iconClasses,
					_1: {
						ctor: '::',
						_0: _user$project$Main$featherIcon(icon),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: captionClasses,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(page),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$navHome = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('grow-large ph4-l pv4-l ph3 flex-ns flex-column-l items-center dn'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _user$project$Main$bgImg('Assets/WhitePlusOneLogo.svg'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('animated bounceIn contain bg-center h3-l w3-l h2 w2'),
					_1: {ctor: '[]'}
				}
			},
			{ctor: '[]'}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('animated bounceInLeft fw7 pa3-m f4 dib-l dn'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('PlusOne'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$plusOneCSS = 'Admin/plusOne.css';
var _user$project$Main$tachyonsCSS = 'Admin/tachyons.css';
var _user$project$Main$gradients = {
	ctor: '::',
	_0: 'lg-magenta-red',
	_1: {
		ctor: '::',
		_0: 'lg-purple-magenta',
		_1: {
			ctor: '::',
			_0: 'lg-blue-purple',
			_1: {
				ctor: '::',
				_0: 'lg-teal-blue',
				_1: {
					ctor: '::',
					_0: 'lg-mint-teal',
					_1: {
						ctor: '::',
						_0: 'lg-green-mint',
						_1: {
							ctor: '::',
							_0: 'lg-yellow-green',
							_1: {
								ctor: '::',
								_0: 'lg-red-yellow',
								_1: {
									ctor: '::',
									_0: 'lg-magenta-yellow',
									_1: {
										ctor: '::',
										_0: 'lg-purple-red',
										_1: {
											ctor: '::',
											_0: 'lg-blue-magenta',
											_1: {
												ctor: '::',
												_0: 'lg-teal-purple',
												_1: {
													ctor: '::',
													_0: 'lg-mint-blue',
													_1: {
														ctor: '::',
														_0: 'lg-green-teal',
														_1: {
															ctor: '::',
															_0: 'lg-yellow-mint',
															_1: {
																ctor: '::',
																_0: 'lg-red-green',
																_1: {
																	ctor: '::',
																	_0: 'lg-yellow-purple',
																	_1: {
																		ctor: '::',
																		_0: 'lg-red-blue',
																		_1: {
																			ctor: '::',
																			_0: 'lg-magenta-blue',
																			_1: {
																				ctor: '::',
																				_0: 'lg-purple-teal',
																				_1: {
																					ctor: '::',
																					_0: 'lg-blue-mint',
																					_1: {
																						ctor: '::',
																						_0: 'lg-teal-green',
																						_1: {
																							ctor: '::',
																							_0: 'lg-mint-yellow',
																							_1: {
																								ctor: '::',
																								_0: 'lg-green-red',
																								_1: {
																									ctor: '::',
																									_0: 'lg-yellow-magenta',
																									_1: {
																										ctor: '::',
																										_0: 'lg-red-purple',
																										_1: {
																											ctor: '::',
																											_0: 'lg-magenta-purple',
																											_1: {
																												ctor: '::',
																												_0: 'lg-purple-blue',
																												_1: {
																													ctor: '::',
																													_0: 'lg-blue-teal',
																													_1: {
																														ctor: '::',
																														_0: 'lg-teal-mint',
																														_1: {
																															ctor: '::',
																															_0: 'lg-mint-green',
																															_1: {
																																ctor: '::',
																																_0: 'lg-green-yellow',
																																_1: {
																																	ctor: '::',
																																	_0: 'lg-yellow-red',
																																	_1: {
																																		ctor: '::',
																																		_0: 'lg-red-magenta',
																																		_1: {ctor: '[]'}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$randomGradient = function (event) {
	var randomSeed = _elm_lang$core$String$length(event.title) * _elm_lang$core$String$length(event.url);
	var randomIndex = A2(
		_elm_lang$core$Basics_ops['%'],
		randomSeed,
		_elm_lang$core$List$length(_user$project$Main$gradients));
	var selectedGradient = _elm_lang$core$List$head(
		A2(_elm_lang$core$List$drop, randomIndex, _user$project$Main$gradients));
	var _p7 = selectedGradient;
	if (_p7.ctor === 'Nothing') {
		return '';
	} else {
		return A2(_elm_lang$core$Basics_ops['++'], _p7._0, '');
	}
};
var _user$project$Main$eventBanner = function (event) {
	var heroImg = function () {
		var _p8 = _user$project$Main$maybeImage(event.performers);
		if (_p8.ctor === 'Nothing') {
			return _elm_lang$html$Html_Attributes$class(
				_user$project$Main$randomGradient(event));
		} else {
			return _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'background-image',
						_1: A2(
							_elm_lang$core$Basics_ops['++'],
							'url(',
							A2(_elm_lang$core$Basics_ops['++'], _p8._0, ')'))
					},
					_1: {ctor: '[]'}
				});
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: heroImg,
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('bg-center cover aspect-ratio aspect-ratio--16x9-l aspect-ratio--1x1-m '),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('aspect-ratio--object cover'),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$eventView = function (model) {
	var now = model.currentDatetime;
	var event = _user$project$Main$selectedEvent(model);
	var _p9 = event;
	if (_p9.ctor === 'Nothing') {
		return _elm_lang$html$Html$text('');
	} else {
		var _p10 = _p9._0;
		return A2(
			_elm_lang$html$Html$section,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('dn db-ns vh-100 animated overflow-auto fadeInLeft mw7-ns flex-grow-1'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _user$project$Main$eventBanner(_p10),
				_1: {
					ctor: '::',
					_0: _user$project$Main$eventTitle(_p10),
					_1: {
						ctor: '::',
						_0: _user$project$Main$eventPopularity(_p10),
						_1: {
							ctor: '::',
							_0: _user$project$Main$eventIcons(_p10),
							_1: {
								ctor: '::',
								_0: _user$project$Main$eventTickets(_p10),
								_1: {
									ctor: '::',
									_0: A2(_user$project$Main$eventTime, _p10, now),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													_elm_lang$core$Basics$toString(_p10)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			});
	}
};
var _user$project$Main$navList = {
	ctor: '::',
	_0: {ctor: '_Tuple2', _0: 'discover', _1: 'compass'},
	_1: {
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'add', _1: 'plus-square'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'share', _1: 'share-2'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'chats', _1: 'message-square'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'profile', _1: 'user'},
					_1: {ctor: '[]'}
				}
			}
		}
	}
};
var _user$project$Main$navBar = A2(
	_elm_lang$html$Html$nav,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('z-9999 w-100 w-auto-l h3 vh-100-l tc-l fixed flex-m flex-row-m items-center-m self-start-m absolute static-l top-0-m bottom-0'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _user$project$Main$navHome,
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$ul,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('list ma0 pa0 flex flex-column-l items-start-l justify-around flex-auto items-center items-stretch-m h3 h-auto-l pr3-l f6 o-90'),
					_1: {ctor: '[]'}
				},
				A2(_elm_lang$core$List$map, _user$project$Main$navTab, _user$project$Main$navList)),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {seatgeek: a, selectedEvent: b, currentDatetime: c};
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p11 = msg;
		switch (_p11.ctor) {
			case 'GetReply':
				if (_p11._0.ctor === 'Ok') {
					var _p12 = _p11._0._0;
					return {
						ctor: '_Tuple2',
						_0: A3(
							_user$project$Main$Model,
							A2(
								_user$project$SeatGeek$Reply,
								_p12.meta,
								A2(_elm_lang$core$Basics_ops['++'], model.seatgeek.events, _p12.events)),
							model.selectedEvent,
							model.currentDatetime),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var _p13 = A2(_elm_lang$core$Debug$log, 'err', _p11._0._0);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'ViewEvent':
				if (_p11._0.ctor === 'Just') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								selectedEvent: _elm_lang$core$Maybe$Just(_p11._0._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{selectedEvent: _elm_lang$core$Maybe$Nothing}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							currentDatetime: _elm_lang$core$Maybe$Just(_p11._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$OnDatetime = function (a) {
	return {ctor: 'OnDatetime', _0: a};
};
var _user$project$Main$getDatetime = A2(_elm_lang$core$Task$perform, _user$project$Main$OnDatetime, _elm_lang$core$Date$now);
var _user$project$Main$ViewEvent = function (a) {
	return {ctor: 'ViewEvent', _0: a};
};
var _user$project$Main$eventListView = function (event) {
	var cardImage = function () {
		var _p14 = _user$project$Main$maybeImage(event.performers);
		if (_p14.ctor === 'Just') {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('w-100 mb2 mt1'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'background-image',
										_1: A2(
											_elm_lang$core$Basics_ops['++'],
											'url(',
											A2(_elm_lang$core$Basics_ops['++'], _p14._0, ')'))
									},
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('aspect-ratio--8x5 cover'),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				});
		} else {
			return _elm_lang$html$Html$text('');
		}
	}();
	var atIcon = A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$featherIcon('at-sign'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('contain dib bg-center mr1 pb3 pr3'),
				_1: {ctor: '[]'}
			}
		},
		{ctor: '[]'});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('animated fadeInUp ph3 pt3 hover-bg-black-30'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$Main$ViewEvent(
						_elm_lang$core$Maybe$Just(event.id))),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: cardImage,
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('pb3 bb b--white-20'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('pb1 f4 fw6 pv2'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('mr2'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(event.title),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('fw5 o-70 dib'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: atIcon,
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html$text(event.venue.name),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('pb2 flex justify-between items-center'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('fw2 o-50 ma0'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(event.datetime_local),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$ul,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('pa0 ma0 list dib'),
												_1: {ctor: '[]'}
											},
											A2(
												_elm_lang$core$List$map,
												function (x) {
													return A2(
														_elm_lang$html$Html$li,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('ml2 dib'),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(
																_user$project$Main$stringToEmoji(x.name)),
															_1: {ctor: '[]'}
														});
												},
												event.taxonomies)),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$eventsView = function (model) {
	return A2(
		_elm_lang$html$Html$section,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('animated fadeInUp mw6-ns bg-black-40 overflow-auto z-999 shadow-2 mr3-l mr2-m flex-grow-1'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('lg-magenta-purple-80 h5 flex flex-column justify-between pa4 pa3-m'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _user$project$Main$discoverToolsView,
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('tr f1 f2-m lh-solid fw8 ma0 pa0'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('discover events'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					A2(_elm_lang$core$List$map, _user$project$Main$eventListView, model.seatgeek.events)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('overflow-hidden lg-breathe-50'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A3(
				_elm_lang$html$Html$node,
				'link',
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$href(_user$project$Main$tachyonsCSS),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A3(
					_elm_lang$html$Html$node,
					'link',
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href(_user$project$Main$plusOneCSS),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('white sans-serif flex fw1 vh-100 bg-black-80'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _user$project$Main$navBar,
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$main_,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('flex-auto pt5-m pb5 pb0-ns flex justify-stretch'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _user$project$Main$eventsView(model),
										_1: {
											ctor: '::',
											_0: _user$project$Main$eventView(model),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$GetReply = function (a) {
	return {ctor: 'GetReply', _0: a};
};
var _user$project$Main$askQuery = function (query) {
	var url = _user$project$SeatGeek$composeRequest(query);
	var request = A2(_elm_lang$http$Http$get, url, _user$project$SeatGeek$decodeReply);
	return A2(_elm_lang$http$Http$send, _user$project$Main$GetReply, request);
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {seatgeek: _user$project$SeatGeek$emptyReply, selectedEvent: _elm_lang$core$Maybe$Nothing, currentDatetime: _elm_lang$core$Maybe$Nothing},
	_1: _elm_lang$core$Platform_Cmd$batch(
		{
			ctor: '::',
			_0: _user$project$Main$askQuery(_user$project$SeatGeek$initQuery),
			_1: {
				ctor: '::',
				_0: _user$project$Main$getDatetime,
				_1: {ctor: '[]'}
			}
		})
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
