var _user$project$Main$mouseMoveSubs = function (model) {
	var _p0 = model.pool.move;
	if (_p0.ctor === 'Nothing') {
		return _elm_lang$core$Platform_Sub$none;
	} else {
		return _elm_lang$core$Platform_Sub$batch(
			{
				ctor: '::',
				_0: _elm_lang$mouse$Mouse$moves(_user$project$Types$MouseMove),
				_1: {
					ctor: '::',
					_0: _elm_lang$mouse$Mouse$ups(_user$project$Types$MouseEnd),
					_1: {ctor: '[]'}
				}
			});
	}
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$window$Window$resizes(_user$project$Types$ResizePool),
			_1: {
				ctor: '::',
				_0: _user$project$Main$mouseMoveSubs(model),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return _user$project$View$render(model);
};
var _user$project$Main$getDatetime = A2(_elm_lang$core$Task$perform, _user$project$Types$OnDatetime, _elm_lang$core$Date$now);
var _user$project$Main$initWindow = A2(_elm_lang$core$Task$perform, _user$project$Types$InitialWindow, _elm_lang$window$Window$size);
var _user$project$Main$initCmd = _elm_lang$core$Platform_Cmd$batch(
	{
		ctor: '::',
		_0: _user$project$SeatGeek_Query$askQuery(_user$project$SeatGeek_Types$initQuery),
		_1: {
			ctor: '::',
			_0: _user$project$Main$getDatetime,
			_1: {
				ctor: '::',
				_0: _user$project$Main$initWindow,
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Types$initModel, _1: _user$project$Main$initCmd};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Update$update, subscriptions: _user$project$Main$subscriptions})();
