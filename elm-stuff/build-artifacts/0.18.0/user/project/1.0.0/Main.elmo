var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$stringToEmoji = function (string) {
	var _p0 = string;
	switch (_p0) {
		case 'concert':
			return 'üéµ';
		case 'music_festival':
			return 'üé∂';
		case 'sports':
			return 'üèÜ';
		case 'theater':
			return 'üé≠';
		case 'basketball':
			return 'üèÄ';
		case 'nba':
			return '‚õπ';
		case 'ncaa_football':
			return 'üë®üèª‚Äçüéì';
		case 'ncaa_basketball':
			return 'üë®üèª‚Äçüéì';
		case 'ncaa_womens_basketball':
			return 'üë©‚Äçüéì';
		case 'wnba':
			return '‚õπÔ∏è‚Äç‚ôÄÔ∏è';
		case 'family':
			return 'üö∏';
		case 'broadway_tickets_national':
			return 'üéü';
		case 'dance_performance_tour':
			return 'üíÉ';
		case 'classical':
			return 'üéº';
		case 'classical_orchestral_instrumental':
			return 'üéª';
		case 'comedy':
			return 'ü§£';
		case 'hockey':
			return 'üèí';
		case 'fighting':
			return 'ü§º‚Äç‚ôÇÔ∏è';
		case 'soccer':
			return '‚öΩ';
		case 'wrestling':
			return 'ü§º';
		case 'football':
			return 'üèà';
		case 'auto_racing':
			return 'üèéÔ∏è';
		case 'animal_sports':
			return 'üêæ';
		case 'horse_racing':
			return 'üèá';
		case 'rodeo':
			return 'ü§†';
		case 'nfl':
			return 'üèüÔ∏è';
		case 'cirque_du_soleil':
			return 'ü§∏';
		case 'classical_opera':
			return 'üé§';
		default:
			return 'ü§∑';
	}
};
var _user$project$Main$featherIcon = function (icon) {
	return _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'background-image',
				_1: A2(
					_elm_lang$core$Basics_ops['++'],
					'url(\'https://icongr.am/feather/',
					A2(_elm_lang$core$Basics_ops['++'], icon, '.svg?size=20&color=ffffff\')'))
			},
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$maybeImage = function (performers) {
	var _p1 = _elm_lang$core$List$head(performers);
	if (_p1.ctor === 'Just') {
		return _p1._0.image;
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _user$project$Main$eventIcons = function (event) {
	var toIcon = function (x) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('flex w4 flex-column items-center overflow-hidden pointer animated zoomIn'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('f-subheadline f1-m grow'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_user$project$Main$stringToEmoji(x.name)),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('pv2 o-80'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Maybe$withDefault,
									x.name,
									_elm_lang$core$List$head(
										A2(_elm_lang$core$String$split, '_', x.name)))),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	};
	return A2(
		_elm_lang$html$Html$ul,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('list mv0 mh4 ph0 pt4 pb3 flex justify-around items-center bb b--white-20'),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, toIcon, event.taxonomies));
};
var _user$project$Main$progressBar = function (num) {
	var percent = num * 100;
	var _p2 = percent;
	if (_p2 === 0.0) {
		return _elm_lang$html$Html$text('');
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('w-100 bg-black-20 overflow-hidden br-pill'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'width',
									_1: A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString(_p2),
										'%')
								},
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('animated slideInleft pt2 bg-red-50'),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Main$eventPool = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('flex items-center justify-around mh4 pv4 bb b--white-20'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$a,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('br-pill pa2 mh1 flex items-center mh1 grow'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$Icon$feather('info'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('h2 w2 contain bg-center'),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('lg-breathe-50 br1 pa2 mh1 flex items-center mh1 grow'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _user$project$Icon$feather('life-buoy'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('h2 w2 mh1 contain bg-center'),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('mh2 f4 fw4 ttn'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('join pool'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('mr3 f2'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('üèä'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Main$yetToBeAdded = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('flex items-center justify-around mh4 pv4 bb b--white-20 lh-copy'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('I still need to add genres in the emojis.\n                I need to have photo galleries for extra photos,\n                other events at the venue, other venues the artist will be at,\n                spotify, Last.fm, and google maps integration. I also need to make\n                events that do not have defined times do not display a time.\n\n                Sed ut perspiciatis, unde omnis iste natus error sit voluptatem\n                accusantium doloremque laudantium, totam rem aperiam eaque ipsa,\n                quae ab illo inventore veritatis et quasi architecto beatae vitae\n                dicta sunt, explicabo. Nemo enim ipsam voluptatem, quia voluptas sit,\n                aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos,\n                qui ratione voluptatem sequi nesciunt, neque porro quisquam est.\n                qui dolorem ipsum, quia dolor sit amet consectetur adipisci.\n                velit, sed quia non numquam [do] eius modi tempora inci[di]dunt,\n                ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima\n                veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam,\n                nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure\n                reprehenderit, qui in ea voluptate velit esse, quam nihil molestiae\n                consequatur, vel illum, qui dolorem eum fugiat, quo voluptas nulla pariatur?\n                '),
		_1: {ctor: '[]'}
	});
var _user$project$Main$eventPopularity = function (event) {
	var _p3 = event.popularity;
	if (_p3 === 0.0) {
		return _elm_lang$html$Html$text('');
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('flex items-center mh4 pv4 bb b--white-20'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('mr3 f2'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('üî•'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('flex flex-column flex-auto h2 justify-around'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _user$project$Main$progressBar(event.popularity),
							_1: {
								ctor: '::',
								_0: _user$project$Main$progressBar(event.score),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	}
};
var _user$project$Main$eventTickets = function (event) {
	var emptyTickets = A2(
		_elm_lang$core$List$all,
		function (x) {
			return _elm_lang$core$Native_Utils.eq(x, _elm_lang$core$Maybe$Nothing);
		},
		{
			ctor: '::',
			_0: event.stats.highest_price,
			_1: {
				ctor: '::',
				_0: event.stats.average_price,
				_1: {
					ctor: '::',
					_0: event.stats.lowest_price,
					_1: {
						ctor: '::',
						_0: event.stats.lowest_price_good_deals,
						_1: {ctor: '[]'}
					}
				}
			}
		});
	var _p4 = event.stats.lowest_price;
	if (_p4.ctor === 'Just') {
		return A2(
			_elm_lang$html$Html$a,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$href(event.url),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$target('_blank'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('bg-white br1 pa2 mh1 flex items-center mh1 no-underline'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'background-image', _1: 'url(\'Assets/SeatGeekLogo.svg\')'},
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('h2 w2 mh1 contain bg-center'),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('blue-80 mh2 f4 fw4 ttn'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'$',
									A2(
										_elm_lang$core$Basics_ops['++'],
										_elm_lang$core$Basics$toString(_p4._0),
										' tickets'))),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	} else {
		return _elm_lang$html$Html$text('');
	}
};
var _user$project$Main$thisPartOfDay = function (hour) {
	return _elm_lang$core$Native_Utils.eq(hour, 1) ? 'in an hour' : A2(
		_elm_lang$core$Basics_ops['++'],
		'in ',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(hour),
			' hours'));
};
var _user$project$Main$somePartOfDay = F2(
	function (hour, day) {
		return _elm_lang$core$Native_Utils.eq(hour, 0) ? A2(_elm_lang$core$Basics_ops['++'], day, ' at midnight') : ((_elm_lang$core$Native_Utils.cmp(hour, 3) < 0) ? A2(_elm_lang$core$Basics_ops['++'], day, ' after midnight') : ((_elm_lang$core$Native_Utils.cmp(hour, 5) < 0) ? A2(_elm_lang$core$Basics_ops['++'], day, ' at dawn') : ((_elm_lang$core$Native_Utils.cmp(hour, 8) < 0) ? A2(
			_elm_lang$core$Basics_ops['++'],
			'early ',
			A2(_elm_lang$core$Basics_ops['++'], day, ' morning')) : ((_elm_lang$core$Native_Utils.cmp(hour, 10) < 0) ? A2(_elm_lang$core$Basics_ops['++'], day, ' morning') : ((_elm_lang$core$Native_Utils.cmp(hour, 12) < 0) ? A2(
			_elm_lang$core$Basics_ops['++'],
			'late ',
			A2(_elm_lang$core$Basics_ops['++'], day, ' morning')) : (_elm_lang$core$Native_Utils.eq(hour, 12) ? A2(_elm_lang$core$Basics_ops['++'], day, ' at noon') : ((_elm_lang$core$Native_Utils.cmp(hour, 15) < 0) ? A2(_elm_lang$core$Basics_ops['++'], day, ' afternoon') : ((_elm_lang$core$Native_Utils.cmp(hour, 17) < 0) ? A2(
			_elm_lang$core$Basics_ops['++'],
			'late ',
			A2(_elm_lang$core$Basics_ops['++'], day, ' afternoon')) : ((_elm_lang$core$Native_Utils.cmp(hour, 20) < 0) ? A2(_elm_lang$core$Basics_ops['++'], day, ' evening') : ((_elm_lang$core$Native_Utils.cmp(hour, 23) < 0) ? A2(_elm_lang$core$Basics_ops['++'], day, ' night') : ((_elm_lang$core$Native_Utils.cmp(hour, 24) < 0) ? A2(
			_elm_lang$core$Basics_ops['++'],
			'late ',
			A2(_elm_lang$core$Basics_ops['++'], day, ' night')) : 'For some reason, I think there are more than 24 hours in a day.')))))))))));
	});
var _user$project$Main$simpleTime = F2(
	function (delta, maybeEventDate) {
		var _p5 = maybeEventDate;
		if (_p5.ctor === 'Nothing') {
			return 'welp, I couldn\'t determine the date of the event';
		} else {
			var _p6 = _p5._0;
			return A2(
				_elm_lang$core$String$contains,
				'-',
				_elm_lang$core$Basics$toString(delta)) ? 'happening now' : ((_elm_lang$core$Native_Utils.cmp(delta.year, 1) > 0) ? 'in over a year' : (_elm_lang$core$Native_Utils.eq(delta.year, 1) ? 'in a year' : ((_elm_lang$core$Native_Utils.cmp(delta.month, 1) > 0) ? A2(
				_elm_lang$core$Basics_ops['++'],
				'in ',
				_rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$monthName(
					_elm_lang$core$Date$month(_p6))) : (_elm_lang$core$Native_Utils.eq(delta.month, 1) ? 'next month' : ((_elm_lang$core$Native_Utils.cmp(delta.day, 13) > 0) ? A2(
				_elm_lang$core$Basics_ops['++'],
				'in ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString((delta.day / 7) | 0),
					' weeks')) : ((_elm_lang$core$Native_Utils.cmp(delta.day, 6) > 0) ? A2(
				_elm_lang$core$Basics_ops['++'],
				'next ',
				_rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$dayName(
					_elm_lang$core$Date$dayOfWeek(_p6))) : ((_elm_lang$core$Native_Utils.cmp(delta.day, 1) > 0) ? A2(
				_user$project$Main$somePartOfDay,
				_elm_lang$core$Date$hour(_p6),
				_rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$dayName(
					_elm_lang$core$Date$dayOfWeek(_p6))) : (_elm_lang$core$Native_Utils.eq(delta.day, 1) ? A2(
				_user$project$Main$somePartOfDay,
				_elm_lang$core$Date$hour(_p6),
				_rluiten$elm_date_extra$Date_Extra_I18n_I_en_us$dayName(
					_elm_lang$core$Date$dayOfWeek(_p6))) : _user$project$Main$thisPartOfDay(
				_elm_lang$core$Date$hour(_p6))))))))));
		}
	});
var _user$project$Main$maybeEventDate = function (date) {
	return _elm_lang$core$Result$toMaybe(
		_elm_lang$core$Date$fromString(date));
};
var _user$project$Main$eventTime = F2(
	function (event, maybeNow) {
		var clockTime = function (x) {
			return A3(_rluiten$elm_date_extra$Date_Extra_Format$format, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config, '%-I:%M %P', x);
		};
		var fullDate = function (x) {
			return A3(_rluiten$elm_date_extra$Date_Extra_Format$format, _rluiten$elm_date_extra$Date_Extra_Config_Config_en_us$config, '%A, %B %@e, %Y', x);
		};
		var eventDateView = function () {
			var _p7 = _user$project$Main$maybeEventDate(event.datetime_local);
			if (_p7.ctor === 'Nothing') {
				return {
					ctor: '::',
					_0: _elm_lang$html$Html$text('not sure what time this event is'),
					_1: {ctor: '[]'}
				};
			} else {
				var _p8 = _p7._0;
				return {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('fw7 f3 lh-solid pb2'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								clockTime(_p8)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('fw4 f5 lh-solid'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									fullDate(_p8)),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				};
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('pv4 mh4 bb b--white-20 flex justify-between'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('mh1'),
						_1: {ctor: '[]'}
					},
					eventDateView),
				_1: {
					ctor: '::',
					_0: _user$project$Main$eventTickets(event),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Main$deltaTime = F2(
	function (now, upcoming) {
		return A3(_elm_lang$core$Maybe$map2, _rluiten$elm_date_extra$Date_Extra_Duration$diff, upcoming, now);
	});
var _user$project$Main$eventTitle = function (event) {
	var textSize = F2(
		function (x, y) {
			var _p9 = (_elm_lang$core$String$length(x) / y) | 0;
			switch (_p9) {
				case 0:
					return ' f-subheadline';
				case 1:
					return ' f1';
				default:
					return ' f2';
			}
		});
	var icon = function (x) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _user$project$Icon$feather(x),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('contain dib bg-center grow ml1 mr2 pt1 pb3 pl1 pr3'),
					_1: {ctor: '[]'}
				}
			},
			{ctor: '[]'});
	};
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('pt4 pb3 mh4 bb b--white-20'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'fw6 pv1 lh-solid ttn',
							A2(textSize, event.title, 30))),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(event.title),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('fw5 pv1 f4 flex items-center o-80 ttn'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: icon('at-sign'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html$text(event.venue.name),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$selectedEvent = function (model) {
	return _elm_lang$core$List$head(
		A2(
			_elm_lang$core$List$filter,
			function (x) {
				return _elm_lang$core$Native_Utils.eq(
					model.selectedEvent,
					_elm_lang$core$Maybe$Just(x.id));
			},
			model.seatgeek.events));
};
var _user$project$Main$discoverToolsView = function () {
	var icon = function (x) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('animated bounceIn pointer hover-bg-black-50 br-pill pa2'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$Icon$feather(x),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('contain bg-center grow pt3 pb2 pl3 pr2'),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			});
	};
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('flex justify-end'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$List$map,
			icon,
			{
				ctor: '::',
				_0: 'search',
				_1: {
					ctor: '::',
					_0: 'map-pin',
					_1: {
						ctor: '::',
						_0: 'thumbs-up',
						_1: {
							ctor: '::',
							_0: 'tag',
							_1: {
								ctor: '::',
								_0: 'at-sign',
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}));
}();
var _user$project$Main$gradients = {
	ctor: '::',
	_0: 'lg-magenta-red',
	_1: {
		ctor: '::',
		_0: 'lg-purple-magenta',
		_1: {
			ctor: '::',
			_0: 'lg-blue-purple',
			_1: {
				ctor: '::',
				_0: 'lg-teal-blue',
				_1: {
					ctor: '::',
					_0: 'lg-mint-teal',
					_1: {
						ctor: '::',
						_0: 'lg-green-mint',
						_1: {
							ctor: '::',
							_0: 'lg-yellow-green',
							_1: {
								ctor: '::',
								_0: 'lg-red-yellow',
								_1: {
									ctor: '::',
									_0: 'lg-magenta-yellow',
									_1: {
										ctor: '::',
										_0: 'lg-purple-red',
										_1: {
											ctor: '::',
											_0: 'lg-blue-magenta',
											_1: {
												ctor: '::',
												_0: 'lg-teal-purple',
												_1: {
													ctor: '::',
													_0: 'lg-mint-blue',
													_1: {
														ctor: '::',
														_0: 'lg-green-teal',
														_1: {
															ctor: '::',
															_0: 'lg-yellow-mint',
															_1: {
																ctor: '::',
																_0: 'lg-red-green',
																_1: {
																	ctor: '::',
																	_0: 'lg-yellow-purple',
																	_1: {
																		ctor: '::',
																		_0: 'lg-red-blue',
																		_1: {
																			ctor: '::',
																			_0: 'lg-magenta-blue',
																			_1: {
																				ctor: '::',
																				_0: 'lg-purple-teal',
																				_1: {
																					ctor: '::',
																					_0: 'lg-blue-mint',
																					_1: {
																						ctor: '::',
																						_0: 'lg-teal-green',
																						_1: {
																							ctor: '::',
																							_0: 'lg-mint-yellow',
																							_1: {
																								ctor: '::',
																								_0: 'lg-green-red',
																								_1: {
																									ctor: '::',
																									_0: 'lg-yellow-magenta',
																									_1: {
																										ctor: '::',
																										_0: 'lg-red-purple',
																										_1: {
																											ctor: '::',
																											_0: 'lg-magenta-purple',
																											_1: {
																												ctor: '::',
																												_0: 'lg-purple-blue',
																												_1: {
																													ctor: '::',
																													_0: 'lg-blue-teal',
																													_1: {
																														ctor: '::',
																														_0: 'lg-teal-mint',
																														_1: {
																															ctor: '::',
																															_0: 'lg-mint-green',
																															_1: {
																																ctor: '::',
																																_0: 'lg-green-yellow',
																																_1: {
																																	ctor: '::',
																																	_0: 'lg-yellow-red',
																																	_1: {
																																		ctor: '::',
																																		_0: 'lg-red-magenta',
																																		_1: {ctor: '[]'}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$randomGradient = function (event) {
	var randomSeed = _elm_lang$core$String$length(event.title) * _elm_lang$core$String$length(event.url);
	var randomIndex = A2(
		_elm_lang$core$Basics_ops['%'],
		randomSeed,
		_elm_lang$core$List$length(_user$project$Main$gradients));
	var selectedGradient = _elm_lang$core$List$head(
		A2(_elm_lang$core$List$drop, randomIndex, _user$project$Main$gradients));
	var _p10 = selectedGradient;
	if (_p10.ctor === 'Nothing') {
		return '';
	} else {
		return A2(_elm_lang$core$Basics_ops['++'], _p10._0, '');
	}
};
var _user$project$Main$eventBanner = function (event) {
	var heroImg = function () {
		var _p11 = _user$project$Main$maybeImage(event.performers);
		if (_p11.ctor === 'Nothing') {
			return _elm_lang$html$Html_Attributes$class(
				_user$project$Main$randomGradient(event));
		} else {
			return _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'background-image',
						_1: A2(
							_elm_lang$core$Basics_ops['++'],
							'url(',
							A2(_elm_lang$core$Basics_ops['++'], _p11._0, ')'))
					},
					_1: {ctor: '[]'}
				});
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: heroImg,
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('bg-center cover aspect-ratio aspect-ratio--16x9 bb b--white-20'),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background-image', _1: 'linear-gradient( rgba(0,0,0,0.3), transparent)'},
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('aspect-ratio--object cover bg-center flex flex-column items-end justify-between pa4 pb0'),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _user$project$Main$discoverToolsView,
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('pa3 lg-breathe-50 br-pill relative top-2 right-1 shadow-2 flex grow justify-center items-center'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _user$project$Main$featherIcon('life-buoy'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('h3 w3 contain'),
											_1: {ctor: '[]'}
										}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$eventView = function (model) {
	var now = model.currentDatetime;
	var event = _user$project$Main$selectedEvent(model);
	var _p12 = event;
	if (_p12.ctor === 'Nothing') {
		return _elm_lang$html$Html$text('');
	} else {
		var _p13 = _p12._0;
		return A2(
			_elm_lang$html$Html$section,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('dn db-ns vh-100 animated overflow-auto fadeInLeft mw7-ns flex-grow-1 bg-black-20'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _user$project$Main$eventBanner(_p13),
				_1: {
					ctor: '::',
					_0: _user$project$Main$eventTitle(_p13),
					_1: {
						ctor: '::',
						_0: _user$project$Main$eventIcons(_p13),
						_1: {
							ctor: '::',
							_0: A2(_user$project$Main$eventTime, _p13, now),
							_1: {
								ctor: '::',
								_0: _user$project$Main$eventPool,
								_1: {
									ctor: '::',
									_0: _user$project$Main$eventPopularity(_p13),
									_1: {
										ctor: '::',
										_0: _user$project$Main$yetToBeAdded,
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			});
	}
};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {seatgeek: a, selectedEvent: b, currentDatetime: c};
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p14 = msg;
		switch (_p14.ctor) {
			case 'GetReply':
				if (_p14._0.ctor === 'Ok') {
					var _p15 = _p14._0._0;
					return {
						ctor: '_Tuple2',
						_0: A3(
							_user$project$Main$Model,
							A2(
								_user$project$SeatGeek$Reply,
								_p15.meta,
								A2(_elm_lang$core$Basics_ops['++'], model.seatgeek.events, _p15.events)),
							model.selectedEvent,
							model.currentDatetime),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var _p16 = A2(_elm_lang$core$Debug$log, 'err', _p14._0._0);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'ViewEvent':
				if (_p14._0.ctor === 'Just') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								selectedEvent: _elm_lang$core$Maybe$Just(_p14._0._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{selectedEvent: _elm_lang$core$Maybe$Nothing}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							currentDatetime: _elm_lang$core$Maybe$Just(_p14._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$OnDatetime = function (a) {
	return {ctor: 'OnDatetime', _0: a};
};
var _user$project$Main$getDatetime = A2(_elm_lang$core$Task$perform, _user$project$Main$OnDatetime, _elm_lang$core$Date$now);
var _user$project$Main$ViewEvent = function (a) {
	return {ctor: 'ViewEvent', _0: a};
};
var _user$project$Main$eventListView = F2(
	function (maybeNow, event) {
		var cardImage = function () {
			var _p17 = _user$project$Main$maybeImage(event.performers);
			if (_p17.ctor === 'Just') {
				return A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'w-100 mb2 mt1 ',
								_user$project$Main$randomGradient(event))),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'background-image',
											_1: A2(
												_elm_lang$core$Basics_ops['++'],
												'url(',
												A2(_elm_lang$core$Basics_ops['++'], _p17._0, ')'))
										},
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('aspect-ratio--8x5 cover'),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					});
			} else {
				return _elm_lang$html$Html$text('');
			}
		}();
		var atIcon = A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _user$project$Main$featherIcon('at-sign'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('contain dib bg-center mr1 mt1 pb3 pr3'),
					_1: {ctor: '[]'}
				}
			},
			{ctor: '[]'});
		var viewTime = function () {
			var _p18 = A2(
				_user$project$Main$deltaTime,
				maybeNow,
				_user$project$Main$maybeEventDate(event.datetime_local));
			if (_p18.ctor === 'Nothing') {
				return 'whoopsie, viewTime messed up';
			} else {
				return A2(
					_user$project$Main$simpleTime,
					_p18._0,
					_user$project$Main$maybeEventDate(event.datetime_local));
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('animated fadeInUp ph3 pt3 hover-bg-black-30'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Main$ViewEvent(
							_elm_lang$core$Maybe$Just(event.id))),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: cardImage,
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('pb3 bb b--white-20'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('pb1 f4 pv2'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('mr2 fw5'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(event.title),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('fw5 o-80 dib'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: atIcon,
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html$text(event.venue.name),
													_1: {ctor: '[]'}
												}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('pb2 flex justify-between items-center'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$span,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('fw4 o-60 ma0'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(viewTime),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$ul,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('pa0 ma0 list dib'),
													_1: {ctor: '[]'}
												},
												A2(
													_elm_lang$core$List$map,
													function (x) {
														return A2(
															_elm_lang$html$Html$li,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('ml2 dib'),
																_1: {ctor: '[]'}
															},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(
																	_user$project$Main$stringToEmoji(x.name)),
																_1: {ctor: '[]'}
															});
													},
													event.taxonomies)),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Main$eventsView = function (model) {
	return A2(
		_elm_lang$html$Html$section,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('animated fadeInUp mw6-ns bg-black-40 overflow-auto z-999 shadow-2-l mr3-l mr2-m flex-grow-1'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('lg-breathe-50 h5 flex flex-column justify-between pa3'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _user$project$Main$discoverToolsView,
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('f1 f2-m lh-solid fw7 ma0 pa0'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('discover events'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					A2(
						_elm_lang$core$List$map,
						_user$project$Main$eventListView(model.currentDatetime),
						model.seatgeek.events)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('overflow-hidden animated fadeIn ttl white flex fw4 vh-100 bg-black-60'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Nav$bar,
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$main_,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('flex-auto pt5-m pb5 pb0-ns flex justify-stretch'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _user$project$Main$eventsView(model),
						_1: {
							ctor: '::',
							_0: _user$project$Main$eventView(model),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$GetReply = function (a) {
	return {ctor: 'GetReply', _0: a};
};
var _user$project$Main$askQuery = function (query) {
	var url = _user$project$SeatGeek$composeRequest(query);
	var request = A2(_elm_lang$http$Http$get, url, _user$project$SeatGeek$decodeReply);
	return A2(_elm_lang$http$Http$send, _user$project$Main$GetReply, request);
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {seatgeek: _user$project$SeatGeek$emptyReply, selectedEvent: _elm_lang$core$Maybe$Nothing, currentDatetime: _elm_lang$core$Maybe$Nothing},
	_1: _elm_lang$core$Platform_Cmd$batch(
		{
			ctor: '::',
			_0: _user$project$Main$askQuery(_user$project$SeatGeek$initQuery),
			_1: {
				ctor: '::',
				_0: _user$project$Main$getDatetime,
				_1: {ctor: '[]'}
			}
		})
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
